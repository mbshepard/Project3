{"version":3,"sources":["App.js","util/appIcons.js","component/top/dropdown.js","component/top/top.js","pages/analyze.js","pages/detailedPahe.js","xsound/analyzers/TimeOverviewAnalyzer.jsx","xsound/analyzers/EventOverrides.js","xsound/ServiceX.js","xsound/AudioEventListener.js","xsound/AudioProvider.jsx","xsound/clips/AudioClip.jsx","xsound/clips/ClipList.js","xsound/analyzers/TimeAnalyze.jsx","xsound/analyzers/FFTAnalyze.jsx","xsound/Playerx.jsx","pages/landingPage.js","pages/Listen.js","pages/review.js","pages/rootPage.js","layout.js","index.js"],"names":["AnimatePlayIcon","className","AnimatePauseIcon","Dropdown","class","for","id","Top","style","height","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","Analyze","DetailedPage","TimeOverviewAnalyzer","state","range","start","end","canvasRef","createRef","setRange","setState","analyzer","this","props","canvas","current","init","w","h","ref","width","onClick","play","stop","Component","EventOverrides","isDown","mode","DRAG_MODE_SPRITE","offsetX","startTime","endTime","length","sampleRate","onStart","event","draw","getOffsetX","onMove","preventDefault","onEnd","drag","callback","drawNode","move","test","navigator","userAgent","graphics","CANVAS","SVG","svg","Object","prototype","toString","call","removeEventListener","window","addEventListener","HTMLCanvasElement","context","getContext","SVGElement","pageX","touches","DRAG_MODE_UPDATE","param","interval","shape","grid","top","left","bottom","right","wave","ServiceX","pos","X","toggle","jumpTo","register","listener","audioEventListener","playClip","canPlay","isSource","sourcePlay","buffer","sprite","selected","get","source","createBufferSource","connect","destination","getTimeAnalyzer","module","domain","setup","getFftAnalyzer","createOverviewAnalyzer","overView","overViewAnalyzer","setTimeOverviewRange","createAnalyzer","key","Date","getTime","doLoad","fileName","cb","console","log","resize","decode","arrayBuffer","dir","ready","audioBuffer","duration","currentTime","update","Math","floor","progress","ClipCb","ended","error","Error","alert","message","createAnalyzers","ajax","url","timeout","success","textStatus","AudioEventListener","audio","registeredClips","techniqueGroups","registerClip","clip","push","unregisterClip","filter","item","currentClip","undefined","stopAll","forEach","requestFocus","find","itm","getId","timeOverviewRange","registerTechnique","techniqueName","tech","addClipToTechnique","addClip","SoundXContext","createContext","AudioProvider","audioListener","Provider","value","children","AudioClip","playing","posValue","currentPos","deleteClip","onDelete","max","_","onChange","e","target","min","contextType","ClipList","clipList","secs","technique","background","containerBGs","map","idx","TimeAnalyze","FFTAnalyze","TECHNIQUE_METAPHOR","TECHNIQUE_PUNCH_LINE","TECHNIQUE_IMAGERY","PlayerX","useRef","useContext","useState","setPlaying","loaded","setLoaded","setPos","setMax","playlist","setPlaylist","timeOverViewAnalyzer","setTimeOverViewAnalyzer","useEffect","a","fetch","resp","ok","json","playLst","loadPlaylist","AddClipButton","cursor","textAlign","padding","track","d","p","load","title","artists","LandingPage","Listen","Review","Root","exact","path","component","Layout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAYA,I,wDCkBaA,EAAkB,kBAC3B,cAAC,IAAD,CAAcC,UAAU,wCAEfC,EAAmB,kBAC5B,cAAC,IAAD,CAAeD,UAAU,yCClBdE,EAfE,WACb,OAAO,8BACH,sBAAKC,MAAM,aAAX,UACJ,uBAAOC,IAAI,4BAAX,4BACA,yBAAQD,MAAM,eAAeE,GAAG,4BAAhC,UACE,uCACA,uCACA,uCACA,uCACA,gDCqCSC,EAzCH,WACR,OAAO,qBAAKC,MAAO,CAAEC,OAAQ,KAAtB,SACH,sBAAKL,MAAM,gDAAX,UACI,mBAAGA,MAAM,eAAT,oBACA,wBAAQA,MAAM,iBAAiBM,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,oBAAxJ,SACI,sBAAMX,MAAM,0BAEhB,sBAAKA,MAAM,2BAA2BE,GAAG,YAAzC,UACI,qBAAIF,MAAM,aAAV,UACI,oBAAIA,MAAM,kBAAV,SACI,eAAC,IAAD,CAAMY,GAAG,IAAIZ,MAAM,WAAnB,cAAgC,cAAC,IAAD,IAAhC,YAEJ,oBAAIA,MAAM,WAAV,SACI,eAAC,IAAD,CAAMY,GAAG,UAAUZ,MAAM,WAAzB,UAAqC,cAAC,IAAD,IAArC,iBAEJ,oBAAIA,MAAM,WAAV,SACI,eAAC,IAAD,CAAMY,GAAG,SAASZ,MAAM,WAAxB,cAAqC,cAAC,IAAD,IAArC,gBAGJ,oBAAIA,MAAM,WAAV,SACI,eAAC,IAAD,CAAMY,GAAG,SAASZ,MAAM,WAAxB,UAAoC,cAAC,IAAD,IAApC,eAGJ,oBAAIA,MAAM,WAAV,SACI,cAAC,IAAD,CAAMY,GAAG,WAAWZ,MAAM,WAA1B,gCAIR,sBAAMA,MAAM,2BAAZ,SACT,cAAC,EAAD,eC1BQa,EAPC,WACZ,OAAO,2CCMIC,EAPM,WACjB,OAAO,gD,+DCCEC,EAAb,4MAGIC,MAAQ,CACJC,MAAO,CAACC,MAAO,EAAGC,IAAK,KAJ/B,EAMIC,UAAYC,sBANhB,EAcIC,SAAS,SAACL,GACN,EAAKM,SAAS,CAACN,WAfvB,kEAQyB,IACVO,EAAYC,KAAKC,MAAjBF,SACDG,EAASF,KAAKL,UAAUQ,QAC9BJ,EAASK,KAAKF,EAAOF,QAX7B,+BAkBc,IAAD,EAEoBA,KAAKC,MAAvBF,EAFF,EAEEA,SAAUM,EAFZ,EAEYA,EAAGC,EAFf,EAEeA,EACbd,EAASQ,KAAKT,MAAdC,MASP,OACI,gCACI,8BAGI,8BACI,wBAAQe,IAAKP,KAAKL,UAAWa,MAAOH,EAAGzB,OAAQ0B,QAIvD,gCACI,iCAAOd,EAAMC,MAAb,UADJ,MACqC,iCAAOD,EAAME,IAAb,UAA4B,uBAC7D,wBAAQe,QAfP,WACTV,EAASW,KAAKlB,EAAMC,MAAOD,EAAME,MAczB,kBACA,wBAAQe,QAnBP,WACTV,EAASY,QAkBD,4BA3CpB,GAA0CC,aCFpCC,E,WAsBF,WAAYd,EAASG,GAAQ,IAAD,gCAb5BY,QAAS,EAamB,KAV5BC,KAAKF,EAAeG,iBAUQ,KAR5BC,QAAY,EAQgB,KAP5BC,UAAY,EAOgB,KAN5BC,QAAY,EAMgB,KAL5BC,OAAO,EAKqB,KAJ5BC,WAAW,MAIiB,KAsB5BC,QAAQ,SAACC,GACL,EAAKC,KAAKD,EAAOA,EAAM1C,KAAM,EAAK4C,WAAWF,IAC7C,EAAKT,QAAS,GAxBU,KA+B5BY,OAAO,SAACH,GACA,EAAKT,SACLS,EAAMI,iBACN,EAAKH,KAAKD,EAAOA,EAAM1C,KAAM,EAAK4C,WAAWF,MAlCzB,KA4C5BK,MAAM,SAACL,GACC,EAAKT,SAEL,EAAKU,KAAKD,EAAOA,EAAM1C,KAAM,EAAK4C,WAAWF,IAC7C,EAAKT,QAAS,IAhDM,KA2E5Be,KAAK,SAACC,GACF,IAAIC,EAAW,KAEXtC,EAAQ,GACRuC,EAAQ,GACRtC,EAAQ,GAaZ,OAVI,2BAA2BuC,KAAKC,UAAUC,YAC1C1C,EAAQ,aACRuC,EAAQ,YACRtC,EAAQ,aAERD,EAAQ,YACRuC,EAAQ,YACRtC,EAAQ,WAGJ,EAAK0C,UACT,KAAKvB,EAAewB,OAChBN,EAAW,EAAK7B,OAChB,MACJ,KAAKW,EAAeyB,IAChBP,EAAW,EAAKQ,IAChB,MACJ,QACI,OAAO,EAcf,OAXA,EAAKT,SAAwD,sBAA7CU,OAAOC,UAAUC,SAASC,KAAKb,GAAoCA,EAAW,aAG9FC,EAASa,oBAAoBnD,EAAO,EAAKM,SAASuB,SAAS,GAC3DS,EAASa,oBAAoBZ,EAAM,EAAKjC,SAAS2B,QAAQ,GACzDmB,OAAOD,oBAAoBlD,EAAK,EAAKK,SAAS6B,OAAO,GAErDG,EAASe,iBAAiBrD,EAAO,EAAK6B,SAAS,GAC/CS,EAASe,iBAAiBd,EAAM,EAAKN,QAAQ,GAC7CmB,OAAOC,iBAAiBpD,EAAK,EAAKkC,OAAO,GAElC,EAAK7B,UAlHZC,KAAKD,SAASA,EACdC,KAAKE,OAAOA,EAGRA,aAAkB6C,mBAClB/C,KAAKoC,SAAWvB,EAAewB,OAC/BrC,KAAKgD,QAAWhD,KAAKE,OAAO+C,WAAW,OAChC/C,aAAkBgD,aACzBlD,KAAKoC,SAAWvB,EAAeyB,KAEnCvC,EAAS8B,KAAK7B,KAAK6B,K,uDA+CZN,GACP,OAAIA,EAAM4B,MACC5B,EAAM4B,MAGb5B,EAAM6B,QAAQ,GACP7B,EAAM6B,QAAQ,GAAGD,MAGrBnD,KAAKD,a,KAzFdc,EACKwC,iBAAmB,SADxBxC,EAEKG,iBAAmB,SAFxBH,EAIKwB,OAAS,SAJdxB,EAKKyB,IAAS,MA2ILzB,QC9ITyC,EAAM,CACRC,SAAU,OACVC,MAAe,OACfhD,MAAO,EACPiD,KAAM,OACNC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,EAEPC,KAAM,kBA6MKC,E,iDArMXtE,MAAQ,SAACuE,GACLC,YAAE,SAASxE,MAAMuE,I,KAGrBrD,KAAO,WACHsD,YAAE,SAAStD,Q,KAGfuD,OAAS,WACLD,YAAE,SAASC,OAAOD,YAAE,SAASX,MAAM,iB,KAGvCa,OAAS,SAACH,GACNC,YAAE,SAASX,MAAM,cAAeU,I,KAGpCI,SAAS,SAACC,GACR,EAAKC,mBAAmBD,G,KAG1BE,SAAS,SAAC9E,EAAMC,GAEZuE,YAAE,SAASxE,MAAMA,EAAOC,I,KAG5B8E,QAAQ,WACJ,OAAOP,YAAE,SAASQ,Y,KAGtBC,WAAW,SAACjF,EAAMC,GACd,IAAMiF,EAASV,YAAE,SAASW,OAAO,CAAEC,SAAW,CAACpF,EAAOC,KAChDsD,EAAUiB,IAAEa,MACZC,EAAU/B,EAAQgC,qBAExBD,EAAOJ,OAASA,EAAOE,SAEvBE,EAAOE,QAAQjC,EAAQkC,aAEvBH,EAAOtF,MAAM,I,KAGjB0F,gBAAgB,SAACjF,GACb,IAAMH,EAAWkE,YAAE,SAASmB,OAAO,YAAYC,OAAO,QAGtD,OAFAtF,EAASuF,MAAMpF,GAAQX,OAAM,GAC7BQ,EAASuD,MAAMA,GACRvD,G,KAGXwF,eAAe,SAACrF,GACZ,IAAMH,EAAWkE,YAAE,SAASmB,OAAO,YAAYC,OAAO,OAGtD,OAFAtF,EAASuF,MAAMpF,GAAQX,OAAM,GAC7BQ,EAASuD,MAAMA,GACRvD,G,KAGXyF,uBAAuB,WACnB,MAAO,CACHpF,KAAM,SAACF,EAAQuF,GACX,EAAKC,iBAAmBD,EACxB,IAAM1F,EAAWkE,YAAE,SAASmB,OAAO,YAAYC,OAAO,eAAgB,GACtEpB,YAAE,SAASX,MAAM,QAAQ,GACzBvD,EAASuF,MAAMpF,GAAQX,OAAM,GAE7BQ,EAASuD,MAAM,OAAQ,UAEvBvD,EAAS8B,MAAK,SAACN,EAAOL,EAAWC,GAC7B,IAAM3B,EAAM,CAACC,MAAOyB,EAAWxB,IAAKyB,GACpC,EAAKR,OACL8E,EAAS5F,SAASL,GAClB,EAAK8E,mBAAmBqB,qBAAqBnG,MAGjD,IAAIqB,EAAed,EAAUG,GAE7BH,EAASuD,MAAMA,IAEnB3C,KAAM,WACF,EAAKA,QAETD,KAAM,SAACjB,EAAOC,GACV,EAAK6E,SAAS9E,EAAOC,M,KAMjCkG,eAAiB,WAAyB,IAAxBpF,EAAuB,uDAAjB,GAAG5B,EAAc,uDAAP,GAErBmB,EAAS,EAAKyF,yBACbK,EAAI,gBAAD,QAAiB,IAAIC,MAAOC,WACrC,OAAO,cAAC,EAAD,CAAsBhG,SAAUA,EAAoBM,EAAGG,EAAOF,EAAG1B,GAAlBiH,I,KAI9DG,OAAS,SAACC,EAAUC,GAEhBC,QAAQC,IAAI,oBAEZnC,YAAE,SAASoC,OAAO,OAElBpC,YAAE,SAASqB,MAAM,CACbgB,OAAQ,SAACC,GAELJ,QAAQC,IAAI,UACZD,QAAQK,IAAID,IAEhBE,MAAO,SAACC,GAEJP,QAAQC,IAAI,SACZ,EAAKjC,OAAO,GACZ+B,EAAGO,MAAMC,EAAYC,WAEzBlH,MAAO,SAACsF,EAAQ6B,GAGZT,QAAQC,IAAI,SACZD,QAAQK,IAAIzB,GACZoB,QAAQK,IAAII,IAEhBjG,KAAM,SAACoE,EAAQ6B,GAGXT,QAAQC,IAAI,QACZD,QAAQK,IAAIzB,GACZoB,QAAQK,IAAII,IAEhBC,OAAQ,SAAC9B,EAAQ6B,GACCE,KAAKC,MAAMH,EAAc7B,EAAOJ,OAAOtD,aACpC,GAAQ0D,EAAOJ,OAAOtD,cAEZ,IAO3B6E,EAAGc,SAASJ,GACR,EAAKK,QACL,EAAKA,OAAOL,GAGhB,EAAKtC,mBAAmB0C,SAASJ,KAGrCM,MAAO,SAACnC,EAAQ6B,GAGZT,QAAQC,IAAI,SACZD,QAAQK,IAAIzB,GACZoB,QAAQK,IAAII,GAEZV,EAAGgB,SAEPC,MAAO,SAAAA,GAECA,aAAiBC,MACjBvE,OAAOwE,MAAMF,EAAMG,SAEnBzE,OAAOwE,MAAM,8BAMrBnB,EAAGqB,iBACHrB,EAAGqB,kBAGPtD,IAAEuD,KAAK,CACHC,IAAKxB,EACLyB,QAAS,IACTC,QAAS,SAACpG,EAAOgF,GAGbtC,YAAE,SAASwC,MAAM9D,KAAKsB,YAAE,SAAUsC,IAGtCY,MAAO,SAAC5F,EAAOqG,GAIXzB,QAAQC,IAAI,SACZD,QAAQK,IAAIjF,GACZ4E,QAAQK,IAAIoB,IAEhBZ,SAAU,SAACzF,GAGP4E,QAAQC,IAAI,YACZD,QAAQK,IAAIjF,QC3IbsG,EAhEX,WAAYC,GAAQ,IAAD,gCANnBC,gBAAkB,GAMC,KAFnBC,gBAAgB,GAEG,KAKnBC,aAAe,SAACC,GACZ,EAAKH,gBAAgBI,KAAKD,GAC1B/B,QAAQC,IAAR,oBAAyB8B,IACzB/B,QAAQC,IAAR,gBAAqB,EAAK2B,gBAAgB3G,UAR3B,KAWnBgH,eAAiB,SAACF,GACd,EAAKH,gBACD,EAAKA,gBAAgBM,QAAO,SAACC,GAAD,OAAUA,IAASJ,KAC/C,EAAKH,gBAAgB3G,QAAQ,IAC7B,EAAKmH,iBAAYC,GAErBrC,QAAQC,IAAR,sBAA2B8B,IAC3B/B,QAAQC,IAAR,gBAAqB,EAAK2B,gBAAgB3G,UAlB3B,KAsBnB4F,SAAS,SAAChD,GACH,EAAKuE,aACJ,EAAKA,YAAYvB,SAAShD,IAxBf,KA2BnByE,QAAQ,WACJ,EAAKV,gBAAgBW,SAAQ,SAACR,GAC1BA,EAAKvH,WA7BM,KAgCnBgI,aAAa,SAAClK,GACV,EAAKgK,UACL,EAAKF,YAAY,EAAKR,gBAAgBa,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAAUrK,MAlCjD,KAsCnB0G,gBAAgB,SAACjF,GACb,OAAO,EAAK4H,MAAM3C,gBAAgBjF,IAvCnB,KA0CnBqF,eAAe,SAACrF,GACZ,OAAO,EAAK4H,MAAMvC,eAAerF,IA3ClB,KA8CnByF,qBAAqB,SAACnG,GAClB,EAAKiJ,UACL,EAAKM,kBAAkBvJ,GAhDR,KAmDnBwJ,kBAAkB,SAACC,EAAcC,GAC7B,EAAKlB,gBAAgBiB,GAAiBC,GApDvB,KAuDnBC,mBAAmB,SAACF,GAChB,IAAMC,EAAK,EAAKlB,gBAAgBiB,GAC5BC,GACAA,EAAKE,WAzDTpJ,KAAK8H,MAAQA,EACbA,EAAM1D,SAASpE,OCPVqJ,EAAgBC,0BAEhBC,EAAb,uKAEQ,IAAMzB,EAAQ,IAAI/D,EACZyF,EAAgB,IAAI3B,EAAmBC,GAC7C,OACI,cAACuB,EAAcI,SAAf,CAAwBC,MAAO,CAC3B5B,QACA0B,iBAFJ,SAIKxJ,KAAKC,MAAM0J,eAT5B,GAAmC/I,a,iCCDtBgJ,EAAb,4MAGIrK,MAAQ,CACJsK,SAAS,EACTC,SAAU,EACVrL,GAAG,EAAKwB,MAAMxB,GACdgB,MAAM,EAAKQ,MAAMR,MACjBC,IAAI,EAAKO,MAAMP,IACfqK,WAAW,EAAK9J,MAAMR,OAT9B,EAmBIuK,WAAW,WACP,EAAK/J,MAAMgK,SAAS,EAAKhK,MAAMxB,KApBvC,EAuBIuI,SAAS,SAAChD,GAAO,IACN8D,EAAO,EAAK9E,QAAZ8E,MADK,EAEiB,EAAKvI,MAA3BE,EAFK,EAELA,MAAMC,EAFD,EAECA,IACPoK,GAHM,EAEKC,WACF/F,EAAM8C,KAAKC,MAAMtH,IAChC,EAAKK,SAAS,CAACgK,WACXC,WAAW/F,IAEXA,GAAOtE,IACP,EAAKI,SAAS,CAACgK,SAAS,IACxBhC,EAAM3D,OAAO1E,KAhCzB,EAoCIkB,KAAK,WACG,EAAKpB,MAAMsK,UACX,EAAK/J,SAAS,CAAC+J,SAAS,IACR,EAAK7G,QAAd8E,MACDnH,SAxClB,EA4CIuD,OAAS,WAAO,IACL4D,EAAO,EAAK9E,QAAZ8E,MADI,EAEmB,EAAKvI,MAA5Bd,EAFI,EAEJA,GAAGoL,EAFC,EAEDA,QAAQE,EAFP,EAEOA,WACbF,IACD,EAAK7G,QAAQwG,cAAcb,aAAalK,GACxCqJ,EAAM3D,OAAO4F,IAEjBjC,EAAM5D,SACN,EAAKpE,SAAS,CAAC+J,SAASA,KApDhC,EAwDIf,MAAM,WACF,OAAO,EAAKvJ,MAAMd,IAzD1B,EA0FIiE,SAAS,WAEL,OAAO,EAAKoG,SA5FpB,kEAYQ9I,KAAKgD,QAAQwG,cAAcvB,aAAajI,QAZhD,6CAeQA,KAAKW,OACLX,KAAKgD,QAAQwG,cAAcpB,eAAepI,QAhBlD,+BA4Dc,IAAD,EAE8BA,KAAKT,MAAjCsK,EAFF,EAEEA,QAAQC,EAFV,EAEUA,SAASrK,EAFnB,EAEmBA,MAAMC,EAFzB,EAEyBA,IAExBwK,EADUC,IAAE3K,MAAMsH,KAAKC,MAAMtH,GAAQqH,KAAKC,MAAMrH,GAAO,GACzC0B,OAWpB,OACI,qBAAKhD,UAAW,aAAcO,MAAO,CAAC6B,MAXhC,KAWN,SACI,iCAAM,sBAAMC,QAAST,KAAKkE,OAApB,SAA6B2F,EAAU,cAAC,EAAD,IAAuB,cAAC,EAAD,MACpE,uBAAOO,SAVC,SAACC,GAEblE,QAAQC,IAAIiE,EAAEC,OAAOZ,QASV7K,KAAM,QACN0L,IAAK,EACLL,IAAKA,EACLR,MAAOI,EACPnL,MAAO,CAAC6B,MAAO,SAEtB,cAAC,IAAD,CAAgBC,QAAST,KAAKgK,sBArF9C,GAA+BpJ,aAAlBgJ,EACFY,YAAcnB,ECAlB,IAAMoB,EAAb,4MAGIlL,MAAQ,CACJmL,SAAU,IAJlB,EAYItB,QAAU,WACN,GAAI,EAAK7J,MAAMmL,SAAStJ,OAAO,EAAKnB,MAAMiK,IAAK,CAC3C,IAAM1K,EAAQ,EAAKwD,QAAQwG,cAAcT,kBACzC,GAAGvJ,EAAO,CACN,IAAMmL,EAAO7D,KAAKC,MAAMvH,EAAME,IAAMF,EAAMC,OAC1C,GAAKkL,EAAO,GAAI,CACZ,IAAMlM,GAAK,IAAIqH,MAAOC,UAChB2E,EAAQ,sBAAO,EAAKnL,MAAMmL,UAAlB,cAA6BjM,MAAOe,KAClD,EAAKM,SAAS,CAAC4K,kBAEfrD,MAAM,qBAAD,OAAsBsD,EAAtB,+BAMbtD,MAAM,gCAAD,OAAiC,EAAKpH,MAAMiK,OA5B7D,EAiCIF,WAAa,SAACvL,GACV,IAAMiM,EAAW,EAAKnL,MAAMmL,SAASrC,QAAO,SAACQ,GAAD,OAASA,EAAIpK,KAAOA,KAChE,EAAKqB,SAAS,CAAC4K,cAnCvB,kEAOyB,IACVE,EAAa5K,KAAKC,MAAlB2K,UACP5K,KAAKgD,QAAQwG,cAAcR,kBAAkB4B,EAAW5K,QAThE,+BAsCc,IAAD,OACE0K,EAAY1K,KAAKT,MAAjBmL,SACAE,EAAa5K,KAAKC,MAAlB2K,UAEP,OAAO,mCACFF,GAAYA,EAAStJ,OAAS,GAE/B,qBAAKhD,UAAW,iBAAkBO,MAAO,CAACkM,WAAYC,EAAaF,IAAnE,SACI,oBAAInM,GAAI,UAAR,SACKiM,EAASK,KAAI,SAAC7C,EAAM8C,GACjB,OAAO,6BACH,cAAC,EAAD,CACIvM,GAAIyJ,EAAKzJ,GACTgB,MAAOyI,EAAKzI,MACZC,IAAKwI,EAAKxI,IACVuK,SAAU,kBAAM,EAAKD,WAAW9B,EAAKzJ,QAL7ByJ,EAAKzJ,iBAhD7C,GAA8BmC,aAAjB6J,EACFD,YAAcnB,ECJlB,IAAM4B,EAAb,4MAEItL,UAAUC,sBAFd,kEAKQ,IAAMM,EAASF,KAAKL,UAAUQ,QAC9BH,KAAKgD,QAAQwG,cAAcrE,gBAAgBjF,KANnD,+BASc,IAAD,EACUF,KAAKC,MAAbI,EADF,EACEA,EAAGC,EADL,EACKA,EAEV,OACI,8BACI,qBAAKC,IAAKP,KAAKL,UAAWa,MAAOH,EAAGzB,OAAQ0B,UAd5D,GAAiCM,aAApBqK,EACFT,YAAcnB,ECDlB,I,EAAM6B,EAAb,4MAEIvL,UAAUC,sBAFd,kEAKQ,IAAMM,EAASF,KAAKL,UAAUQ,QAC9BH,KAAKgD,QAAQwG,cAAcjE,eAAerF,KANlD,+BASc,IAAD,EACUF,KAAKC,MAAbI,EADF,EACEA,EAAGC,EADL,EACKA,EAEV,OACI,8BACI,qBAAKC,IAAKP,KAAKL,UAAWa,MAAOH,EAAGzB,OAAQ0B,UAd5D,GAAgCM,aAAnBsK,EACFV,YAAcnB,ECKzB,IAEM8B,EAAqB,WACrBC,EAAuB,aACvBC,EAAoB,UAEbP,GAAY,mBACpBK,EAAqB,WADD,cAEpBC,EAAuB,0BAFH,cAGpBC,EAAoB,WAHA,GAkJVC,GA7IC,WACZ,IAAM3L,EAAY4L,mBADA,EAGWC,qBAAWnC,GAAnCvB,EAHa,EAGbA,MAAO0B,EAHM,EAGNA,cAHM,EAMYiC,oBAAS,GANrB,mBAMFC,GANE,aAOUD,oBAAS,GAPnB,mBAOXE,EAPW,KAOHC,EAPG,OAQIH,mBAAS,GARb,mBAQNI,GARM,aASIJ,mBAAS,GATb,mBASNK,GATM,aAUcL,mBAAS,IAVvB,mBAUXM,EAVW,KAUDC,EAVC,OAasCP,mBAAS,yBAb/C,mBAaXQ,EAbW,KAaWC,EAbX,KAelBC,qBAAU,YACY,uCAAG,8BAAAC,EAAA,+EAGMC,MAAM,GAAD,OA9BzB,GA8ByB,oBAHX,YAGPC,EAHO,QAIJC,GAJI,gCAKaD,EAAKE,OALlB,OAKHC,EALG,OAMTT,EAAYS,GANH,yDAUbpF,MAAM,2BAAD,OAA4B,KAAEC,QAA9B,MAVQ,0DAAH,qDAalBoF,KAED,IAEH,IA4CMC,EAAgB,SAAC1M,GAAW,IACvB4F,EAAe5F,EAAf4F,IAAI+E,EAAW3K,EAAX2K,UACX,OAAO,oBACInK,QAAS,kBANR,SAACmK,GACbpB,EAAcL,mBAAmByB,GAKPxB,CAAQwB,IACvBjM,MAAO,CAACkM,WAAYC,EAAaF,GAAWgC,OAAO,WAFvD,SAGH,iCAAM,cAAC,IAAD,IAAN,WAA6BhC,MAHjB/E,IAMpB,OAEI,gCACI,sBAAKlH,MAAO,CAACkO,UAAW,OAAQC,QAAS,IAAzC,UACI,cAAC,IAAD,IACA,wBAAQ1C,SAvBE,SAACC,GACfvC,GAAOA,EAAMnH,OACjB+K,GAAW,GACXE,GAAU,GArCD,SAACmB,GAEV,IAAM9G,EAAQ,UA9CP,GA8CO,uBAA2B8G,GACzCjF,EAAM9B,OAAOC,EAAU,CACnBQ,MAAO,SAACuG,GACJnB,EAAO,GACPD,GAAU,GACVE,EAAOkB,IAEX9F,MAAO,WACHwE,GAAW,GACXG,EAAO,IAEX7E,SAAU,SAACiG,GACPpB,EAAOoB,IAEX1F,gBAAiB,WACb2E,EAAwBpE,EAAMlC,eAAe,IAAK,QAEvDjG,EAAUQ,SAmBb+M,CAAK7C,EAAEC,OAAOZ,QAmBN,SAEQqC,EAAShB,KAAI,SAAClC,EAAKmC,GACf,OAAO,yBAAkBtB,MAAOsB,EAAzB,UACFnC,EAAIsE,MADF,IACU,WADV,KACwBtE,EAAIuE,QAD5B,MAAapC,WASnCW,GACD,gCAEI,uBAGA,cAAC,EAAD,CAAoBtL,EAAG,GAAIC,EAAG,IAAb,GACjB,cAAC,EAAD,CAAqBD,EAAG,IAAKC,EAAG,IAAd,GAElB,0BAUH2L,EAEAN,GACD,gCACI,qBAAIvN,UAAW,YAAf,UACI,cAACuO,EAAD,CAAuB/B,UAAWO,GAAd,GACpB,cAACwB,EAAD,CAAuB/B,UAAWQ,GAAd,GACpB,cAACuB,EAAD,CAAuB/B,UAAWS,GAAd,MAExB,cAAC,EAAD,CAAUT,UAAWO,EAAoBjB,IAAK,IAC9C,cAAC,EAAD,CAAUU,UAAWQ,EAAsBlB,IAAK,IAChD,cAAC,EAAD,CAAUU,UAAWS,EAAmBnB,IAAK,WC9I9CmD,GAPK,WAChB,OAAO,+CAEX,cAAC,GAAD,QCeeC,GAnBA,WACX,OAAO,yCAEH,sBAAK/O,MAAM,mBAAX,UACA,qBAAKA,MAAM,cAAX,wBACA,qBAAKA,MAAM,iBAAX,SACI,qBAAKA,MAAM,WAAX,SACI,qBAAKA,MAAM,WAAX,SACI,qBAAKA,MAAM,wBAMvB,qBAAKA,MAAM,kCCPJgP,GAPA,WACX,OAAO,0CCiBIC,GAZF,WACT,OAAQ,gCACJ,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWN,KACjC,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,WAAWC,UAAWvO,IACxC,cAAC,IAAD,CAAOqO,OAAK,EAACC,KAAK,UAAUC,UAAWL,KACvC,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,UAAUC,UAAWJ,KACvC,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,YAAYC,UAAWtO,QCIlCuO,GAZA,WACX,OAAQ,8BACJ,eAAC,IAAD,WACI,cAAC,EAAD,IACA,qBAAKjP,MAAO,CAAEC,OAAQ,uBAAtB,SAEI,cAAC,GAAD,YCJhBiP,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UAEA,cAAC,GAAD,QAGFC,SAASC,eAAe,W","file":"static/js/main.2b597d91.chunk.js","sourcesContent":["import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport NewSongs from './component/newSongs'\nimport Listen from \"./component/listen/Listen\";\nimport LandingPage from \"./component/landing page/landingPage\";\nimport \"./component/songStyle.css\"\nimport Rating from \"./component/Rating/Rating\";\nimport React, { useState, useEffect } from \"react\";\nimport SongInfoContext from \"./util/songInfo\";\nimport { AudioStartReact } from \"./component/XsoundTest/AudioStartReact\";\nimport { AudioStart } from \"./component/XsoundTest/AudioStart\";\n\nconst App = () => {\n    const [songInfoState, setSongInfoState] = useState({\n        name: \"\",\n        song: \"\",\n        image: \"\"\n    });\n    return (\n       \n\n            <div>\n                \n                <Router>\n               \n                    <div>\n                        <Route exact path=\"/\" component={LandingPage} />\n                        <Route exact path=\"/newSongs\" component={NewSongs} />\n                        <Route exact path=\"/listen\" component={Listen} />\n                        <Route exact path=\"/rating/:artistId\" component={Rating} />\n                        <Route exact path=\"/XsoundReact\" component={AudioStartReact} />\n                        <Route exact path=\"/Xsound\" component={AudioStart} />\n                        \n                    </div>\n                </Router>\n               \n\n            </div>\n        // </SongInfoContext.provider>\n\n    );\n\n\n\n}\nexport default App\n","import { FaPauseCircle, FaPlayCircle } from 'react-icons/fa'\n\nexport {\n    GoHome as HomeIcon \n} from \"react-icons/go\"\n\nexport {\n    FaChartBar as AnalysisIcon\n} from \"react-icons/fa\"\n\nexport {\n    ImHeadphones as ListenIcon\n} from \"react-icons/im\"\n\nexport {\n    BiMessageCheck as ReviewIcon\n} from \"react-icons/bi\"\n\nexport {\n    MdPlaylistAdd as AddClipIcon\n} from \"react-icons/md\"\n\nexport {\n    RiPlayList2Fill as PlayListsIcon,\n} from \"react-icons/ri\"\n\nexport {\n    TiDeleteOutline as DeleteClipIcon\n} from 'react-icons/ti'\n\nexport const AnimatePlayIcon = () => (\n    <FaPlayCircle className=\"react-jinke-music-player-play-icon\" />\n)\nexport const AnimatePauseIcon = () => (\n    <FaPauseCircle className=\"react-jinke-music-player-pause-icon\" />\n)","\nconst Dropdown = () => {\n    return <div>\n        <div class=\"form-group\">\n    <label for=\"exampleFormControlSelect1\">Example select</label>\n    <select class=\"form-control\" id=\"exampleFormControlSelect1\">\n      <option>1</option>\n      <option>2</option>\n      <option>3</option>\n      <option>4</option>\n      <option>5</option>\n    </select>\n  </div>\n    </div>;\n}\n \nexport default Dropdown;","import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { AnalysisIcon, HomeIcon, ListenIcon, ReviewIcon } from \"../../util/appIcons\";\nimport Dropdown from \"./dropdown\";\n\n\n\nconst Top = () => {\n    return <div style={{ height: 120,  }}>\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a class=\"navbar-brand\" >Navbar</a>\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul class=\"navbar-nav\">\n                    <li class=\"nav-item active\">\n                        <Link to=\"/\" class=\"nav-link\" > <HomeIcon/>Home</Link>\n                    </li>\n                    <li class=\"nav-item\">\n                        <Link to=\"analyze\" class=\"nav-link\" ><AnalysisIcon/>Analyze  </Link>\n                    </li>\n                    <li class=\"nav-item\">\n                        <Link to=\"Listen\" class=\"nav-link\" > <ListenIcon/> Listen </Link>\n                        \n                    </li>\n                    <li class=\"nav-item\">\n                        <Link to=\"review\" class=\"nav-link\" ><ReviewIcon/>Review </Link>\n                       \n                    </li>\n                    <li class=\"nav-item\">\n                        <Link to=\"detailed\" class=\"nav-link\" >Detailed Page</Link>\n                       \n                    </li>\n                </ul>\n                <form class=\"form-inline my-2 my-lg-0\">\n       <Dropdown/> \n      {/* <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button> */}\n    </form>\n            </div>\n        </nav>\n\n     \n\n    </div>\n\n}\n\nexport default Top;","import { Link } from \"react-router-dom\";\n\nconst Analyze = () => {\n    return <div>\n        Analyze\n        \n    </div>;\n}\n \nexport default Analyze;","import { Link } from \"react-router-dom\";\n\nconst DetailedPage = () => {\n    return <div>\n        DetailedPage\n        \n    </div>;\n}\n \nexport default DetailedPage;","import React, {Component, createRef} from 'react';\n\n\n\nexport class TimeOverviewAnalyzer extends Component {\n    // static contextType = SoundXContext;\n\n    state = {\n        range: {start: 0, end: 50}\n    }\n    canvasRef = createRef();\n\n    componentDidMount() {\n        const {analyzer} = this.props;\n        const canvas = this.canvasRef.current;\n        analyzer.init(canvas,this);\n    }\n\n    setRange=(range)=>{\n        this.setState({range})\n    }\n\n    render() {\n\n        const {analyzer, w, h} = this.props;\n        const {range} = this.state;\n\n\n        const stop = () => {\n            analyzer.stop()\n        }\n        const play = () => {\n            analyzer.play(range.start, range.end);\n        }\n        return (\n            <div>\n                <div>\n\n\n                    <div>\n                        <canvas ref={this.canvasRef} width={w} height={h}></canvas>\n                        {/*<svg ref={this.canvasRef} width={w} height={h}></svg>*/}\n                    </div>\n                </div>\n                <div>\n                    <span>{range.start} sec</span> - <span>{range.end} sec</span><br/>\n                    <button onClick={play}>play</button>\n                    <button onClick={stop}>stop</button>\n                </div>\n            </div>\n        )\n    }\n\n}","\n\nclass EventOverrides  {\n    static DRAG_MODE_UPDATE = 'update';\n    static DRAG_MODE_SPRITE = 'sprite';\n\n    static CANVAS = 'canvas';\n    static SVG    = 'svg';\n\n\n    analyzer;\n    isDown = false;\n    canvas;\n    graphics;\n    mode=EventOverrides.DRAG_MODE_SPRITE;\n    // for Audio Sprite\n    offsetX   = 0;\n    startTime = 0;\n    endTime   = 0;\n    length=0;\n    sampleRate=44100;\n\n\n\n    constructor(analyzer,canvas){\n        this.analyzer=analyzer;\n        this.canvas=canvas;\n\n\n        if (canvas instanceof HTMLCanvasElement) {\n            this.graphics = EventOverrides.CANVAS;\n            this.context  = this.canvas.getContext('2d');\n        } else if (canvas instanceof SVGElement) {\n            this.graphics = EventOverrides.SVG;\n        }\n        analyzer.drag=this.drag;\n\n        // this.superDraw=analyzer.draw;\n        // analyzer.draw=this.draw;\n\n    }\n\n    /**\n     * This method is event audioEventlistener for drawing the rectangle.\n     * @param {Event} event This argument is the instance of `Event`.\n     */\n    onStart=(event) =>{\n        this.draw(event, event.type, this.getOffsetX(event));\n        this.isDown = true;\n    }\n\n    /**\n     * This method is event audioEventlistener for drawing the rectangle.\n     * @param {Event} event This argument is the instance of `Event`.\n     */\n    onMove=(event) =>{\n        if (this.isDown) {\n            event.preventDefault();  // for Touch Panel\n            this.draw(event, event.type, this.getOffsetX(event));\n        }\n\n\n    }\n\n    /**\n     * This method is event audioEventlistener for drawing the rectangle.\n     * @param {Event} event This argument is the instance of `Event`.\n     */\n    onEnd=(event) =>{\n        if (this.isDown) {\n\n            this.draw(event, event.type, this.getOffsetX(event));\n            this.isDown = false;\n        }\n\n    }\n\n    /**\n     * This method returns X coordinate from `Event` object.\n     * @param {Event} event This argument is the instance of `Event`.\n     * @return {number} This is returned as X coordinate.\n     */\n    getOffsetX(event) {\n        if (event.pageX) {\n            return event.pageX;\n        }\n\n        if (event.touches[0]) {\n            return event.touches[0].pageX;\n        }\n\n        return this.analyzer;\n    }\n\n    /**\n     * This method registers event audioEventlistener for setting current time by drag.\n     * @param {function} callback This argument is invoked when current time is changed.\n     * @return {TimeOverviewAnalyzer} This is returned for method chain.\n     */\n    drag=(callback) =>{\n        let drawNode = null;\n\n        let start = '';\n        let move  = '';\n        let end   = '';\n\n        // Touch Panel ?\n        if (/iPhone|iPad|iPod|Android/.test(navigator.userAgent)) {\n            start = 'touchstart';\n            move  = 'touchmove';\n            end   = 'touchend';\n        } else {\n            start = 'mousedown';\n            move  = 'mousemove';\n            end   = 'mouseup';\n        }\n\n        switch (this.graphics) {\n            case EventOverrides.CANVAS:\n                drawNode = this.canvas;\n                break;\n            case EventOverrides.SVG:\n                drawNode = this.svg;\n                break;\n            default:\n                return this;\n        }\n\n        this.callback = Object.prototype.toString.call(callback) === '[object Function]' ? callback : () => {};\n\n\n        drawNode.removeEventListener(start, this.analyzer.onStart, true);\n        drawNode.removeEventListener(move, this.analyzer.onMove, true);\n        window.removeEventListener(end, this.analyzer.onEnd, true);\n\n        drawNode.addEventListener(start, this.onStart, true);\n        drawNode.addEventListener(move, this.onMove, true);\n        window.addEventListener(end, this.onEnd, true);\n\n        return this.analyzer;\n    }\n\n\n\n}\n\nexport default EventOverrides;","import {X} from \"xsound\";\nimport {TimeOverviewAnalyzer} from \"./analyzers/TimeOverviewAnalyzer\";\nimport EventOverrides from \"./analyzers/EventOverrides\";\n\nconst param={\n    interval: 'auto',\n    shape        : 'rect',\n    width: 1,\n    grid: 'none',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    // wave: 'rgb(255,31,46)',\n    wave: 'rgb(25,48,255)',\n    // textinterval : 10\n};\n\nclass ServiceX {\n    overViewAnalyzer;\n    audioEventListener;\n\n    start = (pos) => {\n        X('audio').start(pos);\n    };\n\n    stop = () => {\n        X('audio').stop();\n    };\n\n    toggle = () => {\n        X('audio').toggle(X('audio').param('currentTime'));\n    };\n\n    jumpTo = (pos) => {\n        X('audio').param('currentTime', pos);    // The range of value is between 0 and audio duration\n    };\n\n    register=(listener)=>{\n      this.audioEventListener=listener;\n    }\n\n    playClip=(start,end)=>{\n\n        X('audio').start(start, end);\n    };\n\n    canPlay=()=>{\n        return X('audio').isSource();\n    };\n\n    sourcePlay=(start,end)=>{\n        const buffer = X('audio').sprite({ selected : [start, end] });\n        const context = X.get();\n        const source  = context.createBufferSource();\n\n        source.buffer = buffer.selected;\n\n        source.connect(context.destination);\n\n        source.start(0);\n\n    };\n    getTimeAnalyzer=(canvas)=>{\n        const analyzer = X('audio').module('analyser').domain('time');\n        analyzer.setup(canvas).state(true);\n        analyzer.param(param);\n        return analyzer;\n\n    }\n    getFftAnalyzer=(canvas)=>{\n        const analyzer = X('audio').module('analyser').domain('fft');\n        analyzer.setup(canvas).state(true);\n        analyzer.param(param);\n        return analyzer;\n    }\n\n    createOverviewAnalyzer=()=>{\n        return {\n            init: (canvas, overView) => {\n                this.overViewAnalyzer = overView;\n                const analyzer = X('audio').module('analyser').domain(\"timeoverview\", 0);\n                X('audio').param('loop', true);\n                analyzer.setup(canvas).state(true);\n\n                analyzer.param('mode', 'sprite');\n\n                analyzer.drag((event, startTime, endTime) => {\n                    const range={start: startTime, end: endTime};\n                    this.stop();\n                    overView.setRange(range);\n                    this.audioEventListener.setTimeOverviewRange(range);\n\n                });\n                new EventOverrides(analyzer, canvas);\n\n                analyzer.param(param);\n            },\n            stop: () => {\n                this.stop()\n            },\n            play: (start, end) => {\n                this.playClip(start, end);\n            }\n        };\n    };\n\n\n    createAnalyzer = (width=50,height=50) => {\n\n           const analyzer=this.createOverviewAnalyzer()\n            const key=`timeOverview-${new Date().getTime()}`;\n            return <TimeOverviewAnalyzer analyzer={analyzer} key={key} w={width} h={height} />\n\n    };\n\n    doLoad = (fileName, cb) => {\n\n        console.log(\"X('audio').start\");\n\n        X('audio').resize(16384);\n\n        X('audio').setup({\n            decode: (arrayBuffer) => {\n                // The 1st argument is the instance of `ArrayBuffer`\n                console.log('decode');\n                console.dir(arrayBuffer);\n            },\n            ready: (audioBuffer) => {\n                // The 1st argument is the instance of `AudioBuffer`\n                console.log('ready');\n                this.jumpTo(0);\n                cb.ready(audioBuffer.duration);\n            },\n            start: (source, currentTime) => {\n                // The 1st argument is the instance of `AudioBufferSourceNode`\n                // The 2nd argument is current time (position) in the played audio\n                console.log('start');\n                console.dir(source);\n                console.dir(currentTime);\n            },\n            stop: (source, currentTime) => {\n                // The 1st argument is the instance of `AudioBufferSourceNode`\n                // The 2nd argument is current time (position) in the played audio\n                console.log('stop');\n                console.dir(source);\n                console.dir(currentTime);\n            },\n            update: (source, currentTime) => {\n                const index = Math.floor(currentTime * source.buffer.sampleRate)\n                const n100msec = 0.100 * source.buffer.sampleRate;\n\n                if ((index % n100msec) !== 0) {\n                    return;\n                }\n\n                // console.log('update');\n                // console.dir(source);\n                // console.dir(currentTime);\n                cb.progress(currentTime);\n                if (this.ClipCb){\n                    this.ClipCb(currentTime)\n                }\n\n                this.audioEventListener.progress(currentTime);\n\n            },\n            ended: (source, currentTime) => {\n                // The 1st argument is the instance of `AudioBufferSourceNode`\n                // The 2nd argument is current time (position) in audio\n                console.log('ended');\n                console.dir(source);\n                console.dir(currentTime);\n\n                cb.ended();\n            },\n            error: error => {\n                // The 1st argument is either `Error` or `null`\n                if (error instanceof Error) {\n                    window.alert(error.message);\n                } else {\n                    window.alert('Error : decodeAudioData');\n                }\n            }\n        });\n\n        // this.initAnalyser(canvas);\n        if (cb.createAnalyzers) {\n            cb.createAnalyzers()\n        }\n\n        X.ajax({\n            url: fileName,\n            timeout: 60000,\n            success: (event, arrayBuffer) => {\n                // The 1st argument is `XMLHttpRequestProgressEvent`\n                // The 2nd argument is `ArrayBuffer`[ArrayBuffer -> AudioBuffer]\n                X('audio').ready.call(X('audio'), arrayBuffer);\n\n            },\n            error: (event, textStatus) => {\n                // The 1st argument is `XMLHttpRequestProgressEvent`\n                // The 2nd argument is either 'error' or 'timeout'\n\n                console.log('error');\n                console.dir(event);\n                console.dir(textStatus);\n            },\n            progress: (event) => {\n                // The 1st argument is `XMLHttpRequestProgressEvent`\n\n                console.log('progress');\n                console.dir(event);\n            }\n        });\n    }\n\n}\n\nexport default ServiceX;","\nclass AudioEventListener {\n\n    registeredClips = [];\n    audio;\n    currentClip;\n    timeOverviewRange;\n    techniqueGroups=[];\n\n    constructor(audio) {\n        this.audio = audio;\n        audio.register(this);\n    }\n\n    registerClip = (clip) => {\n        this.registeredClips.push(clip);\n        console.log(`register: ${clip}`);\n        console.log(`size: ${this.registeredClips.length}`);\n    };\n\n    unregisterClip = (clip) => {\n        this.registeredClips =\n            this.registeredClips.filter((item) => item !== clip);\n        if (this.registeredClips.length<=0){\n            this.currentClip=undefined;\n        }\n        console.log(`unRegister: ${clip}`);\n        console.log(`size: ${this.registeredClips.length}`);\n\n    };\n\n    progress=(pos)=>{\n        if(this.currentClip){\n            this.currentClip.progress(pos)\n        }\n    }\n    stopAll=()=>{\n        this.registeredClips.forEach((clip)=>{\n            clip.stop()\n        });\n    }\n    requestFocus=(id)=>{\n        this.stopAll()\n        this.currentClip=this.registeredClips.find((itm)=>itm.getId()===id);\n\n    }\n\n    getTimeAnalyzer=(canvas)=>{\n        return this.audio.getTimeAnalyzer(canvas)\n    }\n\n    getFftAnalyzer=(canvas)=>{\n        return this.audio.getFftAnalyzer(canvas)\n    };\n\n    setTimeOverviewRange=(range)=>{\n        this.stopAll();\n        this.timeOverviewRange=range\n    };\n\n    registerTechnique=(techniqueName,tech)=> {\n        this.techniqueGroups[techniqueName] = tech;\n    };\n\n    addClipToTechnique=(techniqueName)=>{\n        const tech=this.techniqueGroups[techniqueName];\n        if (tech){\n            tech.addClip();\n        }\n    }\n\n}\n\nexport default AudioEventListener;","import React, {createContext, Component} from 'react';\nimport ServiceX from \"../xsound/ServiceX\"\nimport AudioEventListener from \"./AudioEventListener\";\n\nexport const SoundXContext = createContext();\n\nexport class AudioProvider extends Component {\n    render() {\n        const audio = new ServiceX();\n        const audioListener = new AudioEventListener(audio)\n        return (\n            <SoundXContext.Provider value={{\n                audio,\n                audioListener,\n            }}>\n                {this.props.children}\n            </SoundXContext.Provider>\n        );\n    }\n}\n\n","import React, {Component} from 'react';\nimport _ from 'lodash'\nimport {AnimatePauseIcon, AnimatePlayIcon, DeleteClipIcon} from \"../../util/appIcons\";\nimport {SoundXContext} from \"../AudioProvider\";\n\nexport class AudioClip extends Component {\n    static contextType = SoundXContext;\n\n    state = {\n        playing: false,\n        posValue: 0,\n        id:this.props.id,\n        start:this.props.start,\n        end:this.props.end,\n        currentPos:this.props.start,\n    };\n    componentDidMount() {\n        this.context.audioListener.registerClip(this);\n    }\n    componentWillUnmount() {\n        this.stop();\n        this.context.audioListener.unregisterClip(this);\n    }\n\n    deleteClip=()=>{\n        this.props.onDelete(this.props.id);\n    }\n\n    progress=(pos)=>{\n        const {audio}=this.context;\n        const {start,end,currentPos}=this.state;\n        const posValue=pos - Math.floor(start);\n        this.setState({posValue,\n            currentPos:pos\n        });\n        if (pos >= end) {\n            this.setState({posValue:0});\n            audio.jumpTo(start)\n        }\n    };\n\n    stop=()=>{\n        if (this.state.playing) {\n            this.setState({playing: false});\n            const {audio} = this.context;\n            audio.stop();\n        }\n    }\n\n    toggle = () => {\n        const {audio}=this.context;\n        const {id,playing,currentPos}=this.state;\n        if (!playing){\n            this.context.audioListener.requestFocus(id);\n            audio.jumpTo(currentPos)\n        }\n        audio.toggle();\n        this.setState({playing:!playing});\n\n    };\n\n    getId=()=>{\n        return this.state.id;\n    };\n\n    render() {\n\n        const {playing,posValue,start,end}=this.state;\n        const playMap = _.range(Math.floor(start), Math.floor(end) + 1);\n        const max = playMap.length;\n        const w = 100;//max * 11;\n\n\n        const changed = (e) => {\n            // props.changed(e.target.value);\n            console.log(e.target.value);\n        }\n\n\n\n        return (\n            <div className={\"audio-clip\"} style={{width:w}}>\n                <span><span onClick={this.toggle}>{playing ? <AnimatePauseIcon /> : <AnimatePlayIcon />}</span>\n                <input onChange={changed}\n                       type={\"range\"}\n                       min={0}\n                       max={max}\n                       value={posValue}\n                       style={{width: \"60%\"}}\n                />\n                <DeleteClipIcon onClick={this.deleteClip}/>\n                </span>\n            </div>\n        );\n    }\n    toString=()=>{\n\n        return this.getId();\n    };\n\n\n};","import React, {Component} from 'react';\nimport {AudioClip} from \"./AudioClip\";\nimport {SoundXContext} from \"../AudioProvider\";\nimport {containerBGs} from \"../Playerx\";\n\n\nexport class ClipList extends Component {\n    static contextType = SoundXContext;\n\n    state = {\n        clipList: []\n    };\n\n    componentDidMount() {\n        const {technique} = this.props;\n        this.context.audioListener.registerTechnique(technique, this);\n    }\n\n    addClip = () => {\n        if (this.state.clipList.length<this.props.max) {\n            const range = this.context.audioListener.timeOverviewRange;\n            if(range) {\n                const secs = Math.floor(range.end - range.start);\n                if ( secs > 10) {\n                    const id = new Date().getTime();\n                    const clipList = [...this.state.clipList, {id, ...range}];\n                    this.setState({clipList});\n                } else {\n                    alert(`Selected clips of ${secs} is less than 10secs`)\n\n                }\n            }\n\n        }else{\n            alert(`Cannot exceeded max clips of ${this.props.max}`)\n        }\n    };\n\n\n    deleteClip = (id) => {\n        const clipList = this.state.clipList.filter((itm) => itm.id !== id);\n        this.setState({clipList});\n    };\n\n    render() {\n        const {clipList} = this.state;\n        const {technique} = this.props;\n\n        return <>\n            {clipList && clipList.length > 0 &&\n\n            <div className={\"clip-container\"} style={{background: containerBGs[technique]}}>\n                <ul id={\"navlist\"}>\n                    {clipList.map((clip, idx) => {\n                        return <li key={clip.id}>\n                            <AudioClip\n                                id={clip.id}\n                                start={clip.start}\n                                end={clip.end}\n                                onDelete={() => this.deleteClip(clip.id)}\n                            />\n                        </li>\n                    })}\n                </ul>\n            </div>\n            }\n        </>\n    }\n\n}","import React, {Component,useEffect, createRef} from 'react';\nimport {SoundXContext} from \"../AudioProvider\";\n\nexport class TimeAnalyze extends Component{\n    static contextType = SoundXContext;\n    canvasRef=createRef();\n\n    componentDidMount() {\n        const canvas = this.canvasRef.current;\n        this.context.audioListener.getTimeAnalyzer(canvas);\n    }\n\n    render() {\n        const {w, h} = this.props;\n\n        return (\n            <div>\n                <svg ref={this.canvasRef} width={w} height={h}></svg>\n            </div>\n        );\n    }\n}","import React, {Component,useEffect, createRef} from 'react';\nimport {SoundXContext} from \"../AudioProvider\";\n\nexport class FFTAnalyze extends Component{\n    static contextType = SoundXContext;\n    canvasRef=createRef();\n\n    componentDidMount() {\n        const canvas = this.canvasRef.current;\n        this.context.audioListener.getFftAnalyzer(canvas);\n    }\n\n    render() {\n        const {w, h} = this.props;\n\n        return (\n            <div>\n                <svg ref={this.canvasRef} width={w} height={h}></svg>\n            </div>\n        );\n    }\n}","import React, {useContext, useEffect, useRef, useState} from 'react';\n\nimport {AddClipIcon, PlayListsIcon} from \"../util/appIcons\";\nimport {SoundXContext} from \"./AudioProvider\";\nimport {ClipList} from \"./clips/ClipList\";\nimport {TimeAnalyze} from \"./analyzers/TimeAnalyze\";\nimport {FFTAnalyze} from \"./analyzers/FFTAnalyze\";\n\n\nconst apiUrl = \"\";\n\nconst TECHNIQUE_METAPHOR = 'Metaphor';\nconst TECHNIQUE_PUNCH_LINE = 'Punch_line';\nconst TECHNIQUE_IMAGERY = 'Imagery';\n\nexport const containerBGs = {\n    [TECHNIQUE_METAPHOR]: \"#2e8b57\",\n    [TECHNIQUE_PUNCH_LINE]: \"rgba(255,105,104,0.96)\",\n    [TECHNIQUE_IMAGERY]: \"#237aff\",\n}\nconst PlayerX = () => {\n    const canvasRef = useRef();\n\n    let {audio, audioListener} = useContext(SoundXContext);\n\n\n    const [playing, setPlaying] = useState(false);\n    const [loaded, setLoaded] = useState(false);\n    const [pos, setPos] = useState(0);\n    const [max, setMax] = useState(0);\n    const [playlist, setPlaylist] = useState([]);\n    // const [metaPhorList, setMetaPhorList] = useState([]);\n\n    const [timeOverViewAnalyzer, setTimeOverViewAnalyzer] = useState(<div/>);\n\n    useEffect(() => {\n        const loadPlaylist = async () => {\n\n            try {\n                const resp = await fetch(`${apiUrl}/audio/playlist`);\n                if (resp.ok) {\n                    const playLst = await resp.json();\n                    setPlaylist(playLst);\n                    // load(0);\n                }\n            } catch (e) {\n                alert(`problem loading songs: \"${e.message}\"`)\n            }\n        };\n        loadPlaylist();\n\n    }, []);\n\n    const load = (track) => {\n        // audio = new ServiceX(`${apiUrl}/audio/load/${track}`);\n        const fileName = `${apiUrl}/audio/load/${track}`;\n        audio.doLoad(fileName, {\n            ready: (d) => {\n                setPos(0);\n                setLoaded(true);\n                setMax(d)\n            },\n            ended: () => {\n                setPlaying(false);\n                setPos(0)\n            },\n            progress: (p) => {\n                setPos(p)\n            },\n            createAnalyzers: () => {\n                setTimeOverViewAnalyzer(audio.createAnalyzer(795, 100));\n            }\n        }, canvasRef.current)/**/\n\n    };\n\n    const toggle = () => {\n        audio.toggle();\n        setPlaying(!playing);\n\n    };\n\n    const changed = (v) => {\n        setPos(v);\n        audio.jumpTo(v);\n    };\n\n    const titleSelected = (e) => {\n        if (audio) audio.stop();\n        setPlaying(false);\n        setLoaded(false);\n        load(e.target.value);\n    };\n\n    const addClip = (technique) => {\n        audioListener.addClipToTechnique(technique)\n    };\n    const AddClipButton = (props) => {\n        const {key,technique}=props;\n        return <li key={key}\n                   onClick={() => addClip(technique)}\n                   style={{background: containerBGs[technique],cursor:\"pointer\"}}>\n            <span><AddClipIcon/> Add to {technique}</span>\n        </li>\n    }\n    return (\n\n        <div>\n            <div style={{textAlign: \"left\", padding: 10}}>\n                <PlayListsIcon/>\n                <select onChange={titleSelected}>\n                    {\n                        playlist.map((itm, idx) => {\n                            return <option key={idx} value={idx}>\n                                {itm.title} {\"  ----  \"} [{itm.artists}]\n                            </option>\n                        })\n                    }\n\n                </select>\n            </div>\n\n            {loaded &&\n            <div>\n\n                <hr/>\n\n\n                <FFTAnalyze key={1} w={80} h={50}/>\n                <TimeAnalyze key={2} w={150} h={50}/>\n\n                <br/>\n\n\n                {/*<div disabled={!loaded} onClick={toggle}>{playing ? <AnimatePauseIcon/> : <AnimatePlayIcon/>}</div>*/}\n                {/*    <ProgressX max={max} pos={pos} changed={changed}/>*/}\n                {/*    <br/>*/}\n\n            </div>\n            }\n\n            {timeOverViewAnalyzer}\n\n            {loaded &&\n            <div>\n                <ul className={\"technique\"}>\n                    <AddClipButton key={1} technique={TECHNIQUE_METAPHOR}/>\n                    <AddClipButton key={2} technique={TECHNIQUE_PUNCH_LINE}/>\n                    <AddClipButton key={3} technique={TECHNIQUE_IMAGERY}/>\n                </ul>\n                <ClipList technique={TECHNIQUE_METAPHOR} max={4}/>\n                <ClipList technique={TECHNIQUE_PUNCH_LINE} max={2}/>\n                <ClipList technique={TECHNIQUE_IMAGERY} max={3}/>\n            </div>\n            }\n\n        </div>\n    );\n\n};\n\nexport default PlayerX;","import { Link } from \"react-router-dom\";\nimport PlayerX from \"../xsound/Playerx\";\n\nconst LandingPage = () => {\n    return <div>\n        Landing Page\n<PlayerX/>\n    </div>;\n}\n \nexport default LandingPage;","import { Link } from \"react-router-dom\";\n\nconst Listen = () => {\n    return <div>\n        Listen\n        <div class=\"card text-center\">\n        <div class=\"card-header\">Song Title</div>\n        <div class=\"song-container\">\n            <div class=\"song-box\">\n                <div class=\"selector\">\n                    <div class=\"selector-left\" >\n                    </div>\n                   \n                </div>\n            </div>\n        </div>\n        <div class=\"card-footer text-muted\"></div>\n    </div>\n    </div>;\n}\n \nexport default Listen;","import { Link } from \"react-router-dom\";\n\nconst Review = () => {\n    return <div>\n        Review\n        \n    </div>;\n}\n \nexport default Review;","import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Analyze from \"./analyze\";\nimport DetailedPage from \"./detailedPahe\";\nimport LandingPage from \"./landingPage\";\nimport Listen from \"./Listen\";\nimport Review from \"./review\";\n\n\nconst Root = () => {\n    return  <div>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route exact path=\"/analyze\" component={Analyze} />\n        <Route exact path=\"/listen\" component={Listen} />\n        <Route exact path=\"/review\" component={Review} />\n        <Route exact path=\"/detailed\" component={DetailedPage} />\n        \n    </div>\n\n}\n \nexport default Root;","import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport App from \"./App\";\nimport Top from \"./component/top/top\";\nimport Root from \"./pages/rootPage\";\n\n\nconst Layout = () => {\n    return (<div>\n        <Router>\n            <Top />\n            <div style={{ height: \"calc(100vh - 120px)\", }}>\n                {/* <App /> */}\n                <Root />\n            </div>\n            </Router>\n    </div>);\n}\n\nexport default Layout;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/App';\nimport Layout from './layout';\nimport { AudioProvider } from './xsound/AudioProvider';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <AudioProvider>\n    {/* <App /> */}\n    <Layout/>\n    </AudioProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}