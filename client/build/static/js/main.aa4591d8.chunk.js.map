{"version":3,"sources":["util/appIcons.js","xsound/core/AudioService.js","xsound/AudioEventListener.js","xsound/AudioProvider.jsx","xsound/SongLoader.js","xsound/analyzers/TimeOverviewAnalyzer.jsx","xsound/PlayProgress.js","xsound/analyzers/FFTAnalyze.jsx","xsound/analyzers/TimeAnalyze.jsx","component/top/top.js","xsound/clips/AudioClip.jsx","xsound/clips/ClipContainer.jsx","xsound/TechniqueManager.js","pages/analyze.js","pages/detailedPage.js","pages/landingPage.js","pages/Listen.js","pages/review.js","pages/rootPage.js","pages/Authentication/authentication.js","layout.js","index.js"],"names":["AnimatePlayIcon","className","AnimatePauseIcon","param","interval","shape","width","grid","top","left","bottom","right","wave","AudioService","start","pos","X","stop","toggle","jumpTo","register","listener","audioEventListener","playRange","end","canPlay","isSource","sourcePlay","buffer","sprite","selected","context","get","source","createBufferSource","connect","destination","createTimeAnalyzer","canvas","analyzer","module","domain","setup","state","createFftAnalyzer","createOverviewAnalyzer","init","drag","event","startTime","endTime","range","setTimeOverviewRange","createAnalyzer","Date","getTime","doLoad","fileName","cb","console","log","resize","decode","arrayBuffer","dir","ready","audioBuffer","loaded","duration","currentTime","update","Math","floor","sampleRate","ClipCb","progress","ended","error","Error","window","alert","message","createAnalyzers","ajax","url","timeout","success","call","textStatus","AudioEventListener","audio","registeredClips","techniqueGroups","selectedSongId","songList","registerClip","clip","push","length","unregisterClip","filter","item","currentClip","undefined","progressX","stopAll","forEach","requestFocus","id","find","itm","getId","timeAnalyze","fftAnalyze","techniqueManager","timeOverviewAnalyzer","reviewPage","getCurrentSongInfo","timeOverviewRange","setRange","registerTechnique","techniqueName","tech","addClipToTechnique","addClip","resetTechniques","Object","entries","clearClips","loadCurrentSong","songLoader","loadSong","this","SoundXContext","createContext","AudioProvider","audioListener","Provider","value","props","children","Component","SongLoader","useContext","useState","songlist","setSonglist","selectedSong","setSelectedSong","apiUrl","show","useEffect","a","fetch","resp","ok","json","loadPlaylist","songId","style","textAlign","padding","onChange","e","target","map","idx","title","artists","round","places","power","pow","TimeOverviewAnalyzer","playing","canvasRef","createRef","current","setState","play","w","h","startMin","endMin","ref","height","onClick","contextType","nbSpace","n","index","PlayProgress","max","changed","posMin","fontSize","type","min","FFTAnalyze","TimeAnalyze","Top","songs","setSongs","setProgress","setsetTop","showTopNav","timeOverView","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","Nav","to","setUser","display","position","AudioClip","posValue","currentPos","deleteClip","onDelete","toString","_","ClipContainer","clipList","secs","technique","background","containerBGs","TECHNIQUE_METAPHOR","TECHNIQUE_PUNCH_LINE","TECHNIQUE_IMAGERY","TechniqueManager","setShow","AddClipButton","cursor","Analyze","DetailedPage","LandingPage","Listen","Review","currentSong","setCurrentSong","song","Root","exact","path","component","Authentication","Form","Row","Group","controlId","Label","Control","placeholder","Text","Button","name","Layout","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa4591d8.chunk.js","sourcesContent":["import { FaPauseCircle, FaPlayCircle } from 'react-icons/fa'\n\nexport {\n    GoHome as HomeIcon \n} from \"react-icons/go\"\n\nexport {\n    FaChartBar as AnalysisIcon\n} from \"react-icons/fa\"\n\nexport {\n    ImHeadphones as ListenIcon\n} from \"react-icons/im\"\n\nexport {\n    BiMessageCheck as ReviewIcon,\n} from \"react-icons/bi\"\n\n\nexport {\n    MdPlaylistAdd as AddClipIcon\n} from \"react-icons/md\"\n\nexport {\n    RiPlayList2Fill as PlayListsIcon,\n    RiLogoutBoxRLine as LogoutIcon\n\n} from \"react-icons/ri\"\n\nexport {\n    TiDeleteOutline as DeleteClipIcon\n} from 'react-icons/ti'\n\nexport const AnimatePlayIcon = () => (\n    <FaPlayCircle className=\"react-jinke-music-player-play-icon\" />\n)\nexport const AnimatePauseIcon = () => (\n    <FaPauseCircle className=\"react-jinke-music-player-pause-icon\" />\n)","import {X} from \"xsound\";\n\nconst param={\n    interval: 'auto',\n    shape        : 'rect',\n    width: 1,\n    grid: 'none',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    // wave: 'rgb(255,31,46)',\n    wave: 'rgb(25,48,255)',\n    // textinterval : 10\n};\n\nclass AudioService {\n\n    audioEventListener;\n\n    start = (pos) => {\n        X('audio').start(pos);\n    };\n\n    stop = () => {\n        X('audio').stop();\n    };\n\n    toggle = () => {\n        X('audio').toggle(X('audio').param('currentTime'));\n    };\n\n    jumpTo = (pos) => {\n        X('audio').param('currentTime', pos);    // The range of value is between 0 and audio duration\n    };\n\n    register=(listener)=>{\n      this.audioEventListener=listener;\n    }\n\n    playRange=(start,end)=>{\n\n        X('audio').start(start, end);\n    };\n\n    canPlay=()=>{\n        return X('audio').isSource();\n    };\n\n    sourcePlay=(start,end)=>{\n        const buffer = X('audio').sprite({ selected : [start, end] });\n        const context = X.get();\n        const source  = context.createBufferSource();\n\n        source.buffer = buffer.selected;\n\n        source.connect(context.destination);\n\n        source.start(0);\n\n    };\n    createTimeAnalyzer=(canvas)=>{\n        const analyzer = X('audio').module('analyser').domain('time');\n        analyzer.setup(canvas).state(true);\n        analyzer.param(param);\n        return analyzer;\n\n    }\n    createFftAnalyzer=(canvas)=>{\n        const analyzer = X('audio').module('analyser').domain('fft');\n        analyzer.setup(canvas).state(true);\n        analyzer.param(param);\n        return analyzer;\n    }\n\n    createOverviewAnalyzer=()=>{\n        return {\n            init: (canvas) => {\n\n                const analyzer = X('audio').module('analyser').domain(\"timeoverview\", 0);\n                // X('audio').param('loop', true);\n                analyzer.setup(canvas).state(true);\n\n                analyzer.param('mode', 'sprite');\n\n                analyzer.drag((event, startTime, endTime) => {\n                    const range={start: startTime, end: endTime};\n                    this.stop();\n                    // overView.setRange(range);\n                    this.audioEventListener.setTimeOverviewRange(range);\n\n                });\n                // new EventOverrides(analyzer, canvas);\n\n                analyzer.param(param);\n            }\n\n        };\n    };\n\n\n    createAnalyzer = () => {\n\n           const analyzer=this.createOverviewAnalyzer();\n            const key=`timeOverview-${new Date().getTime()}`;\n            return analyzer;\n\n    };\n\n    doLoad = (fileName, cb) => {\n\n        console.log(\"X('audio').start\");\n\n        X('audio').resize(16384);\n\n        X('audio').setup({\n            decode: (arrayBuffer) => {\n                // The 1st argument is the instance of `ArrayBuffer`\n                console.log('decode');\n                console.dir(arrayBuffer);\n            },\n            ready: (audioBuffer) => {\n                // The 1st argument is the instance of `AudioBuffer`\n                console.log('ready');\n                this.jumpTo(0);\n                this.audioEventListener.loaded(audioBuffer.duration)\n            },\n            start: (source, currentTime) => {\n                // The 1st argument is the instance of `AudioBufferSourceNode`\n                // The 2nd argument is current time (position) in the played audio\n                console.log('start');\n                console.dir(source);\n                console.dir(currentTime);\n            },\n            stop: (source, currentTime) => {\n                // The 1st argument is the instance of `AudioBufferSourceNode`\n                // The 2nd argument is current time (position) in the played audio\n                console.log('stop');\n                console.dir(source);\n                console.dir(currentTime);\n            },\n            update: (source, currentTime) => {\n                const index = Math.floor(currentTime * source.buffer.sampleRate)\n                const n100msec = 0.100 * source.buffer.sampleRate;\n\n                if ((index % n100msec) !== 0) {\n                    return;\n                }\n\n                // console.log('update');\n                // console.dir(source);\n                // console.dir(currentTime);\n                // cb.progress(currentTime);\n                if (this.ClipCb){\n                    this.ClipCb(currentTime)\n                }\n\n                this.audioEventListener.progress(currentTime);\n\n            },\n            ended: (source, currentTime) => {\n                // The 1st argument is the instance of `AudioBufferSourceNode`\n                // The 2nd argument is current time (position) in audio\n                console.log('ended');\n                console.dir(source);\n                console.dir(currentTime);\n\n                // cb.ended();\n            },\n            error: error => {\n                // The 1st argument is either `Error` or `null`\n                if (error instanceof Error) {\n                    window.alert(error.message);\n                } else {\n                    window.alert('Error : decodeAudioData');\n                }\n            }\n        });\n\n        // this.initAnalyser(canvas);\n        if (cb.createAnalyzers) {\n            cb.createAnalyzers();\n        }\n\n        X.ajax({\n            url: fileName,\n            timeout: 60000,\n            success: (event, arrayBuffer) => {\n                // The 1st argument is `XMLHttpRequestProgressEvent`\n                // The 2nd argument is `ArrayBuffer`[ArrayBuffer -> AudioBuffer]\n\n\n                    X('audio').ready.call(X('audio'), arrayBuffer);\n\n\n            },\n            error: (event, textStatus) => {\n                // The 1st argument is `XMLHttpRequestProgressEvent`\n                // The 2nd argument is either 'error' or 'timeout'\n\n                console.log('error');\n                console.dir(event);\n                console.dir(textStatus);\n            },\n            progress: (event) => {\n                // The 1st argument is `XMLHttpRequestProgressEvent`\n\n                console.log('progress');\n                console.dir(event);\n            }\n        });\n    }\n\n}\n\nexport default AudioService;","\nclass AudioEventListener {\n\n    registeredClips = [];\n    audio;\n    currentClip;\n    timeOverviewRange;\n    techniqueGroups=[];\n    duration=0;\n\n    timeOverviewAnalyzer;\n    timeAnalyze;\n    fftAnalyze;\n    techniqueManager;\n    progressX;\n    showTopNav;\n    selectedSongId=-1;\n    songLoader;\n    reviewPage;\n    songList=[];\n\n    constructor(audio) {\n        this.audio = audio;\n        audio.register(this);\n    }\n\n    registerClip = (clip) => {\n        this.registeredClips.push(clip);\n        console.log(`register: ${clip}`);\n        console.log(`size: ${this.registeredClips.length}`);\n    };\n\n    unregisterClip = (clip) => {\n        this.registeredClips =\n            this.registeredClips.filter((item) => item !== clip);\n        if (this.registeredClips.length<=0){\n            this.currentClip=undefined;\n        }\n        console.log(`unRegister: ${clip}`);\n        console.log(`size: ${this.registeredClips.length}`);\n\n    };\n\n    progress=(pos)=>{\n        if(this.currentClip){\n            this.currentClip.progress(pos)\n        }\n        if (this.progressX){\n            this.progressX.progress(pos)\n        }\n    }\n    stopAll=()=>{\n        this.registeredClips.forEach((clip)=>{\n            clip.stop()\n        });\n        if (this.progressX){\n            this.progressX.stop()\n        }\n    }\n    requestFocus=(id)=>{\n        this.stopAll()\n        this.currentClip=this.registeredClips.find((itm)=>itm.getId()===id);\n    }\n\n    loaded=(duration)=>{\n        if (this.timeAnalyze){\n            this.timeAnalyze.loaded(duration);\n        }\n        if (this.fftAnalyze){\n            this.fftAnalyze.loaded(duration);\n        }\n        if (this.progressX){\n            this.progressX.loaded(duration);\n        }\n        if (this.techniqueManager){\n            this.techniqueManager.loaded(duration)\n        }\n        if (this.timeOverviewAnalyzer){\n            this.timeOverviewAnalyzer.loaded(duration)\n        }\n        if (this.reviewPage){\n            this.reviewPage.loaded(duration,this.getCurrentSongInfo());\n        }\n    }\n\n\n    setTimeOverviewRange=(range)=>{\n        this.stopAll();\n        this.timeOverviewRange=range;\n        if (this.timeOverviewAnalyzer){\n            this.timeOverviewAnalyzer.setRange(range)\n        }\n\n    };\n\n    registerTechnique=(techniqueName,tech)=> {\n        this.techniqueGroups[techniqueName] = tech;\n    };\n\n    addClipToTechnique=(techniqueName)=>{\n        const tech=this.techniqueGroups[techniqueName];\n        if (tech){\n            tech.addClip();\n        }\n    };\n\n    resetTechniques=()=>{\n        for (const [key, tech] of Object.entries(this.techniqueGroups)) {\n            tech.clearClips()\n        }\n        this.timeOverviewRange=null;\n    }\n\n    loadCurrentSong=()=>{\n        this.songLoader.loadSong(this.selectedSongId)\n    }\n\n    getCurrentSongInfo=()=>{\n        return this.songList.find((itm)=>{\n            return `${itm.id}`===`${this.selectedSongId}`;\n        })\n    }\n\n\n\n}\n\nexport default AudioEventListener;","import React, {createContext, Component} from 'react';\nimport AudioService from \"./core/AudioService\"\nimport AudioEventListener from \"./AudioEventListener\";\n\nexport const SoundXContext = createContext();\n\nexport class AudioProvider extends Component {\n    render() {\n        const audio = new AudioService();\n        const audioListener = new AudioEventListener(audio)\n        return (\n            <SoundXContext.Provider value={{\n                audio,\n                audioListener,\n            }}>\n                {this.props.children}\n            </SoundXContext.Provider>\n        );\n    }\n}\n\n","\nimport React, {useContext, useEffect, useState} from 'react';\nimport {PlayListsIcon} from \"../util/appIcons\";\nimport {SoundXContext} from \"./AudioProvider\";\n\nexport function SongLoader(props) {\n    const {audio,audioListener} = useContext(SoundXContext);\n\n    const [songlist, setSonglist] = useState([]);\n    const [selectedSong, setSelectedSong] = useState(-1);\n    const {apiUrl,show}=props;\n\n    useEffect(() => {\n        audioListener.songLoader={loadSong};\n\n        const loadPlaylist = async () => {\n\n            try {\n                const resp = await fetch(`${apiUrl}/audio/playlist`);\n                if (resp.ok) {\n                    const songlist = await resp.json();\n                    setSonglist(songlist);\n                    if (songlist.length>0) {\n                        loadSong(songlist[0].id);\n                        audioListener.songList=songlist\n                    }\n                }\n            } catch (e) {\n                alert(`problem loading songs: \"${e.message}\"`)\n            }\n        };\n        loadPlaylist();\n\n    }, []);\n\n\n    const songSelected = (e) => {\n        loadSong(e.target.value)\n    };\n\n    const loadSong = (songId) => {\n        console.log(`songId ${songId}`);\n        if (audio){\n            audio.stop()\n        };\n        setSelectedSong(songId)\n        audioListener.selectedSongId=songId;\n        if (audioListener.timeOverviewAnalyzer.loadSong) {\n            audioListener.timeOverviewAnalyzer.loadSong(songId);\n        }\n    };\n\n    return (\n        <>\n            { show &&\n                <div style={{textAlign: \"left\", padding: 10}}>\n                    <PlayListsIcon/>\n                    <select onChange={songSelected} value={selectedSong}>\n                        {\n                            songlist.map((itm, idx) => {\n                                return <option key={idx} value={itm.id}>\n                                    {itm.title} {\"  ----  \"} [{itm.artists}]\n                                </option>\n                            })\n                        }\n\n                    </select>\n                </div>\n            }\n            </>\n    );\n};","import React, {Component, createRef} from 'react';\nimport {SoundXContext} from \"../AudioProvider\";\nimport {AnimatePauseIcon, AnimatePlayIcon} from \"../../util/appIcons\";\n\nexport const round=(value,places)=>{\n    const power=Math.pow(10,2);\n    return Math.round(value*power)/power;\n}\nexport class TimeOverviewAnalyzer extends Component {\n    state = {\n        range: {start: 0, end: 50},\n        show: false,\n        analyzer: null,\n        playing:false\n    }\n\n    static contextType = SoundXContext;\n    canvasRef = createRef();\n\n    componentDidMount() {\n        this.context.audioListener.timeOverviewAnalyzer = this;\n\n    }\n\n    componentWillUnmount() {\n        this.context.audioListener.timeOverviewAnalyzer = null;\n    }\n\n    loaded(duration) {\n        const range=this.state.range;\n        range.end=duration;\n        range.start=0;\n        this.setState({show: true,range});\n\n\n    }\n\n    loadSong = (songId) => {\n        const audio = this.context.audio;\n        audio.doLoad(`${this.props.apiUrl}/audio/load/${songId}`, {\n\n            createAnalyzers: () => {\n                const analyzer = audio.createAnalyzer();\n                const canvas = this.canvasRef.current;\n                analyzer.init(canvas);\n             }\n        })\n\n    };\n\n    setRange = (range) => {\n        this.setState({range})\n    }\n    toggle=()=>{\n        if (this.state.playing){\n            this.stop()\n        }else{\n            this.play()\n        }\n    }\n\n     stop = () => {\n        this.setState({playing:false})\n        this.context.audio.stop();\n    }\n     play = () => {\n         this.setState({playing:true})\n        const range=this.state.range;\n        this.context.audio.playRange(range.start, range.end);\n    }\n    render() {\n\n        const {w, h} = this.props;\n        const {range, show} = this.state;\n\n        const startMin=round(range.start/60,2);\n        const endMin=round(range.end/60,2);\n\n        return (\n            <div>\n                {\n                <div>\n                    <canvas ref={this.canvasRef} width={w} height={h}></canvas>\n                    <br/>\n                    {show &&\n                        <div><span>{startMin}</span> - <span>{endMin}</span><br/>\n                            <div onClick={this.toggle}>{this.state.playing ? <AnimatePauseIcon/> :\n                                <AnimatePlayIcon/>}</div>\n                        </div>   }\n                </div>\n                }\n\n            </div>\n        )\n    }\n\n}","import React, { Component, useState } from 'react';\nimport { AnimatePauseIcon, AnimatePlayIcon } from \"../util/appIcons\";\nimport { SoundXContext } from \"./AudioProvider\";\nimport { round } from \"./analyzers/TimeOverviewAnalyzer\";\n\nconst nbSpace =(n)=>{\n    let result = \"\";\n for (let index = 0; index < n; index++) {\n     result = result + \n     <span>&nbsp;</span>\n }\n    return  <span>&nbsp;</span> ;  \n} \nexport class PlayProgress extends Component {\n    static contextType = SoundXContext;\n\n    state = {\n        pos: 0,\n        playing: false,\n        max: 0,\n        show: false\n    };\n\n    // const [pos, setPos] = useState(0);\n    componentDidMount() {\n        this.context.audioListener.progressX = this;\n    }\n\n    componentWillUnmount() {\n        this.context.audioListener.progressX = null;\n    }\n\n    toggle = () => {\n        this.context.audio.toggle();\n        const playing = !this.state.playing;\n        this.setState({ playing });\n\n    };\n    stop = (pos) => {\n        this.context.audio.stop()\n    };\n\n    progress = (pos) => {\n        this.setState({ pos });\n    };\n\n    changed = (e) => {\n        const pos = e.target.value;\n        this.setState({ pos });\n        this.context.audio.jumpTo(pos);\n    };\n\n    loaded = (duration) => {\n        this.setState({ max: duration });\n        this.setState({ show: true })\n    }\n\n    render() {\n        const { max, pos, show, playing } = this.state;\n        const posMin = round(pos / 60, 2);\n        const endMin = round(max / 60, 2);\n        return (\n            <div>\n                {show &&\n                    <div>\n\n                        <span onClick={this.toggle}>\n                            {playing ? <AnimatePauseIcon /> : <AnimatePlayIcon />}\n                            {nbSpace(2)}\n                            <span style={{ fontSize: 12 }}>{posMin}</span>\n                            {nbSpace(2)}\n                            <input onChange={this.changed}\n                                type={\"range\"}\n                                min={0}\n                                max={max}\n                                value={pos}\n                                style={{ width: 700 }}\n                            /> {endMin}\n                        </span>\n                    </div>\n                }\n            </div>\n        );\n    }\n\n}\n\n","import React, {Component, createRef} from 'react';\nimport {SoundXContext} from \"../AudioProvider\";\n\nexport class FFTAnalyze extends Component{\n    state={\n        show:false\n    }\n\n    static contextType = SoundXContext;\n    canvasRef=createRef();\n\n    componentDidMount() {\n        this.context.audioListener.fftAnalyze=this;\n    }\n    componentWillUnmount() {\n        this.context.audioListener.fftAnalyze=null;\n    }\n\n    loaded=()=>{\n\n        this.setState({show:true});\n        const canvas = this.canvasRef.current;\n        this.context.audio.createFftAnalyzer(canvas);\n\n    }\n\n    render() {\n        const {w, h} = this.props;\n\n        return (\n            <div>\n                {this.state.show &&\n                <svg ref={this.canvasRef} width={w} height={h}> </svg>\n                }\n            </div>\n        );\n    }\n}","import React, {Component, createRef} from 'react';\nimport {SoundXContext} from \"../AudioProvider\";\n\nexport class TimeAnalyze extends Component{\n    state={\n        show:false\n    }\n\n    static contextType = SoundXContext;\n    canvasRef=createRef();\n\n    componentDidMount() {\n        this.context.audioListener.timeAnalyze=this;\n    }\n    componentWillUnmount() {\n        this.context.audioListener.timeAnalyze=null;\n    }\n\n    loaded=()=>{\n        this.setState({show:true});\n        const canvas = this.canvasRef.current;\n        this.context.audio.createTimeAnalyzer(canvas);\n  }\n\n    render() {\n        const {w, h} = this.props;\n\n        return (\n            <div>\n                {this.state.show &&\n                <div>\n                    <svg ref={this.canvasRef} width={w} height={h}> </svg>\n                </div>\n                }\n            </div>\n        );\n    }\n}","import {Link} from \"react-router-dom\";\nimport {AnalysisIcon, HomeIcon, ListenIcon, LogoutIcon, ReviewIcon} from \"../../util/appIcons\";\nimport {Nav, Navbar} from 'react-bootstrap'\nimport {SongLoader} from \"../../xsound/SongLoader\";\nimport {PlayProgress} from \"../../xsound/PlayProgress\"\nimport {FFTAnalyze} from \"../../xsound/analyzers/FFTAnalyze\";\nimport {TimeAnalyze} from \"../../xsound/analyzers/TimeAnalyze\";\nimport {TimeOverviewAnalyzer} from \"../../xsound/analyzers/TimeOverviewAnalyzer\";\nimport {Fragment, useContext, useEffect, useState} from \"react\";\nimport {SoundXContext} from \"../../xsound/AudioProvider\";\n\n// const apiUrl = \"http://localhost:3030\";\nconst apiUrl = \"\";\n\n\nconst Top = (props) => {\n    const {audioListener} = useContext(SoundXContext);\n    const [songs, setSongs] = useState(false);\n    const [progress, setProgress] = useState(false);\n    const [top, setsetTop] = useState(-300);\n\n    useEffect(() => {\n        audioListener.showTopNav=showTopNav;\n        return ()=>{\n            audioListener.showTopNav=null;\n        }\n    }, []);\n\n\n    const showTopNav=(songs,progress,timeOverView)=>{\n        setSongs(songs);\n        setProgress(progress);\n        const top=timeOverView?120:-300;\n        setsetTop(top);\n    };\n\n    const logout=()=>{\n        props.setUser(null);\n    }\n\n    return <div style={{height: 120,}}>\n\n\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"white\">\n            <Navbar.Brand href=\"/\">BaRs</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Link to=\"/\" className=\"nav-link\"><HomeIcon/>Home</Link>\n                    <Link to=\"/analyze\" className=\"nav-link\"><AnalysisIcon/>Analyze </Link>\n                    <Link to=\"/listen\" className=\"nav-link\"> <ListenIcon/> Listen</Link>\n                    <Link to=\"review\" className=\"nav-link\"><ReviewIcon/>Review </Link>\n\n                </Nav>\n                <Nav>\n\n                    <SongLoader apiUrl={apiUrl} show={songs}/>\n\n                </Nav>\n                <Nav>\n                    <LogoutIcon title={'Logout'} onClick={logout}/>\n                </Nav>\n\n            </Navbar.Collapse>\n        </Navbar>\n\n\n            <ul className=\"timefft\" style={{display:progress?\"\":\"none\"}}>\n                <li><FFTAnalyze key={1} w={80} h={50}/></li>\n                <li><PlayProgress/></li>\n                <li><TimeAnalyze key={2} w={80} h={50}/></li>\n            </ul>\n\n            <div style={{position:\"relative\",top:top,left:0}}>\n                <TimeOverviewAnalyzer apiUrl={\"\"} key={\"analyzer\"} w={800} h={100}/>\n            </div>\n\n\n    </div>\n\n}\n\nexport default Top;","import React, {Component} from 'react';\nimport _ from 'lodash'\nimport {AnimatePauseIcon, AnimatePlayIcon, DeleteClipIcon} from \"../../util/appIcons\";\nimport {SoundXContext} from \"../AudioProvider\";\n\nexport class AudioClip extends Component {\n    static contextType = SoundXContext;\n\n    state = {\n        playing: false,\n        posValue: 0,\n        id:this.props.id,\n        start:this.props.start,\n        end:this.props.end,\n        currentPos:this.props.start,\n    };\n    componentDidMount() {\n        this.context.audioListener.registerClip(this);\n    }\n    componentWillUnmount() {\n        this.stop();\n        this.context.audioListener.unregisterClip(this);\n    }\n\n    deleteClip=()=>{\n        this.props.onDelete(this.props.id);\n    }\n\n    progress=(pos)=>{\n        const {audio}=this.context;\n        const {start,end,currentPos}=this.state;\n        const posValue=pos - Math.floor(start);\n        this.setState({posValue,\n            currentPos:pos\n        });\n        if (pos >= end) {\n            this.setState({posValue:0});\n            audio.jumpTo(start)\n        }\n    };\n\n    stop=()=>{\n        if (this.state.playing) {\n            this.setState({playing: false});\n            const {audio} = this.context;\n            audio.stop();\n        }\n    }\n\n    toggle = () => {\n        const {audio}=this.context;\n        const {id,playing,currentPos}=this.state;\n        if (!playing){\n            this.context.audioListener.requestFocus(id);\n            audio.jumpTo(currentPos)\n        }\n        audio.toggle();\n        this.setState({playing:!playing});\n\n    };\n\n    getId=()=>{\n        return this.state.id;\n    };\n\n    render() {\n\n        const {playing,posValue,start,end}=this.state;\n        const playMap = _.range(Math.floor(start), Math.floor(end) + 1);\n        const max = playMap.length;\n        const w = 100;//max * 11;\n\n\n        const changed = (e) => {\n            // props.changed(e.target.value);\n            console.log(e.target.value);\n        }\n\n\n\n        return (\n            <div className={\"audio-clip\"} style={{width:w}}>\n                <span><span onClick={this.toggle}>{playing ? <AnimatePauseIcon /> : <AnimatePlayIcon />}</span>\n                <input onChange={changed}\n                       type={\"range\"}\n                       min={0}\n                       max={max}\n                       value={posValue}\n                       style={{width: \"60%\"}}\n                />\n                <DeleteClipIcon onClick={this.deleteClip}/>\n                </span>\n            </div>\n        );\n    }\n    toString=()=>{\n\n        return this.getId();\n    };\n\n\n};","import React, {Component} from 'react';\nimport {AudioClip} from \"./AudioClip\";\nimport {SoundXContext} from \"../AudioProvider\";\nimport {containerBGs} from \"../TechniqueManager\";\n\n\nexport class ClipContainer extends Component {\n    static contextType = SoundXContext;\n\n    state = {\n        clipList: []\n    };\n\n    componentDidMount() {\n        const {technique} = this.props;\n        this.context.audioListener.registerTechnique(technique, this);\n    }\n\n    addClip = () => {\n        if (this.state.clipList.length<this.props.max) {\n            const range = this.context.audioListener.timeOverviewRange;\n            if(range) {\n                const secs = Math.floor(range.end - range.start);\n                if ( secs > 10) {\n                    const id = new Date().getTime();\n                    const clipList = [...this.state.clipList, {id, ...range}];\n                    this.setState({clipList});\n                } else {\n                    alert(`Selected clips of ${secs} is less than 10secs`)\n\n                }\n            }\n\n        }else{\n            alert(`Cannot exceeded max clips of ${this.props.max}`)\n        }\n    };\n\n\n    deleteClip = (id) => {\n        const clipList = this.state.clipList.filter((itm) => itm.id !== id);\n        this.setState({clipList});\n    };\n\n    clearClips=()=>{\n        const clipList=[];\n        this.setState({clipList});\n    }\n\n    render() {\n        const {clipList} = this.state;\n        const {technique} = this.props;\n\n        return <>\n            {clipList && clipList.length > 0 &&\n\n            <div className={\"clip-container\"} style={{background: containerBGs[technique]}}>\n                <ul id={\"navlist\"}>\n                    {clipList.map((clip, idx) => {\n                        return <li key={clip.id}>\n                            <AudioClip\n                                id={clip.id}\n                                start={clip.start}\n                                end={clip.end}\n                                onDelete={() => this.deleteClip(clip.id)}\n                            />\n                        </li>\n                    })}\n                </ul>\n            </div>\n            }\n        </>\n    }\n\n}","\nimport React, {useContext,useState,useEffect} from 'react';\nimport {ClipContainer} from \"./clips/ClipContainer\";\nimport {AddClipIcon} from \"../util/appIcons\";\nimport {SoundXContext} from \"./AudioProvider\";\n\nconst TECHNIQUE_METAPHOR = 'Metaphor';\nconst TECHNIQUE_PUNCH_LINE = 'Punch_line';\nconst TECHNIQUE_IMAGERY = 'Imagery';\n\nexport const containerBGs = {\n    [TECHNIQUE_METAPHOR]: \"#2e8b57\",\n    [TECHNIQUE_PUNCH_LINE]: \"rgba(255,105,104,0.96)\",\n    [TECHNIQUE_IMAGERY]: \"#237aff\",\n}\n\nexport const TechniqueManager=(props) =>{\n    const [show, setShow] = useState(false);\n    const { audioListener} = useContext(SoundXContext);\n\n    useEffect(() => {\n        audioListener.techniqueManager={loaded};\n        return () => {\n            audioListener.techniqueManager=null;\n        };\n    }, []);\n\n    const loaded=()=>{\n        setShow(true)\n        audioListener.resetTechniques();\n    }\n    const addClip = (technique) => {\n        audioListener.addClipToTechnique(technique)\n    };\n    const AddClipButton = (props) => {\n        const {technique}=props;\n        return <li\n            onClick={() => addClip(technique)}\n            style={{background: containerBGs[technique],cursor:\"pointer\"}}>\n            <span><AddClipIcon/> Add to {technique}</span>\n        </li>\n    }\n    return (\n        <div>\n            { show &&\n                <div>\n                <ul className={\"technique\"}>\n                    <AddClipButton key={1} technique={TECHNIQUE_METAPHOR}/>\n                    <AddClipButton key={2} technique={TECHNIQUE_PUNCH_LINE}/>\n                    <AddClipButton key={3} technique={TECHNIQUE_IMAGERY}/>\n                </ul>\n                < ClipContainer technique={TECHNIQUE_METAPHOR} max={4}/>\n                <ClipContainer technique={TECHNIQUE_PUNCH_LINE} max={2}/>\n                <ClipContainer technique={TECHNIQUE_IMAGERY} max={3}/>\n                </div>\n            }\n        </div>\n    );\n};","import { Link } from \"react-router-dom\";\nimport { TimeOverviewAnalyzer } from \"../xsound/analyzers/TimeOverviewAnalyzer\";\nimport { TechniqueManager } from \"../xsound/TechniqueManager\";\nimport {useContext, useEffect} from \"react\";\nimport {SoundXContext} from \"../xsound/AudioProvider\";\n\nconst Analyze = () => {\n    const {audioListener} = useContext(SoundXContext);\n\n    useEffect(() => {\n        audioListener.showTopNav(true,false,true);\n        audioListener.stopAll();\n        audioListener.loadCurrentSong();\n    }, []);\n\n    return <div>\n\n        {/*<TimeOverviewAnalyzer apiUrl={\"\"} key={\"analyzer\"} w={800} h={100} />*/}\n        <div style={{width:800,height:250}}/>\n        <TechniqueManager/>\n        \n    </div>;\n}\n \nexport default Analyze;","import { Link } from \"react-router-dom\";\n\nconst DetailedPage = () => {\n    return <div>\n        DetailedPage\n        \n    </div>;\n}\n \nexport default DetailedPage;","import {useContext, useEffect} from \"react\";\nimport {SoundXContext} from \"../xsound/AudioProvider\";\n\nconst LandingPage = () => {\n    const {audioListener} = useContext(SoundXContext);\n\n    useEffect(() => {\n\n            audioListener.showTopNav(false,false,false);\n            audioListener.stopAll();\n\n    }, []);\n\n    return <div>\n        Landing Page\n    </div>;\n}\n \nexport default LandingPage;","import {useContext, useEffect} from \"react\";\nimport {SoundXContext} from \"../xsound/AudioProvider\";\n\nconst Listen = () => {\n    const {audioListener} = useContext(SoundXContext);\n\n    useEffect(() => {\n        audioListener.showTopNav(true, true,false);\n        audioListener.stopAll();\n        audioListener.loadCurrentSong();\n\n    }, []);\n    return <div>\n        Listen\n\n    </div>;\n}\n\nexport default Listen;","import {useContext, useEffect,useState} from \"react\";\nimport {SoundXContext} from \"../xsound/AudioProvider\";\n\nconst Review = () => {\n    const {audioListener} = useContext(SoundXContext);\n    const [currentSong, setCurrentSong] = useState(null);\n\n    useEffect(() => {\n        audioListener.reviewPage={loaded};\n        audioListener.showTopNav(true,false,false);\n        audioListener.loadCurrentSong();\n        audioListener.stopAll();\n        return ()=>{\n            audioListener.reviewPage=null\n        }\n\n    }, []);\n\n    const loaded = (duration, song) => {\n        console.log(`From Review ${duration}`,song);\n        setCurrentSong(song)\n    };\n\n    return <div>\n\n        <h3>Review Page</h3>\n        {currentSong &&\n            <>\n                {currentSong.title}<br/>\n                {currentSong.artists}\n            </>\n        }\n    </div>;\n}\n \nexport default Review;","import {Route} from \"react-router-dom\";\nimport Analyze from \"./analyze\";\nimport DetailedPage from \"./detailedPage\";\nimport LandingPage from \"./landingPage\";\nimport Listen from \"./Listen\";\nimport Review from \"./review\";\n\n\nconst Root = () => {\n    return  <div>\n        {/*<Route exact path=\"/\" component={Authentication} />*/}\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route exact path=\"/analyze\" component={Analyze} />\n        <Route exact path=\"/listen\" component={Listen} />\n        <Route exact path=\"/review\" component={Review} />\n        <Route exact path=\"/detailed\" component={DetailedPage} />\n        \n    </div>\n\n}\n \nexport default Root;","import \"./style.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Form, Row} from 'react-bootstrap';\nimport Button from \"react-bootstrap/Button\";\n\n\nconst Authentication = (props) => {\n\n    const login=()=>{\n        props.setUser({name:\"Ralph\"})\n    }\n    \n    return <div className=\"backgroundPic\">\n            <div id=\"title\"> </div> \n            <div className=\"auth-body\">\n                <div className=\"pForm\">\n                    <div id=\"form-background\"></div>\n                    <div id=\"form\">\n                        <Form>\n                            <Row>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Label>Full Name</Form.Label>\n                                    <Form.Control type=\"email\" placeholder=\"First Name\" />\n                                </Form.Group>\n                            </Row>\n                            <Row>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Control type=\"email\" placeholder=\"Last Name\" />\n                                </Form.Group>\n                            </Row>\n                            <Row>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Label>Authentication</Form.Label>\n                                    <Form.Control type=\"email\" placeholder=\"login@email.com\" />\n                                    <Form.Text className=\"text-muted\">\n                                        We'll never share your email with anyone else.\n                                    </Form.Text>\n                                </Form.Group>\n                            </Row>\n                            <Row>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Control type=\"email\" placeholder=\"Password\" />\n                                </Form.Group>\n                            </Row>\n                            <Button onClick={login}>Login</Button>\n                        </Form>  \n                    </div>\n                </div>\n            </div>\n\n       \n\n        {/* <Link to=\"/landingpage\">New Songs</Link> */}\n    </div>\n}\nexport default Authentication;","import React,{useState} from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n// import App from \"./App\";\nimport Top from \"./component/top/top\";\nimport Root from \"./pages/rootPage\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Authentication from \"./pages/Authentication/authentication\";\n\n\nconst Layout = () => {\n    const [user, setUser] = useState(null);\n    return (<div className=\"App\">\n        { user ?\n            <Router>\n                <Top setUser={setUser}/>\n                <div style={{height: \"calc(100vh - 120px)\",}}>\n                    {/* <App /> */}\n                    <Root/>\n                </div>\n            </Router>:\n            <Authentication setUser={setUser}/> \n\n        }\n    </div>);\n}\n\nexport default Layout;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from '../src/App';\nimport Layout from './layout';\nimport { AudioProvider } from './xsound/AudioProvider';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <AudioProvider>\n    {/* <App /> */}\n    <Layout/>\n    </AudioProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}