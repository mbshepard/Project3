{"version":3,"sources":["util/appIcons.js","xsound/core/AudioService.js","xsound/AudioEventListener.js","xsound/AudioProvider.jsx","xsound/SongLoader.js","xsound/analyzers/TimeOverviewAnalyzer.jsx","xsound/PlayProgress.js","xsound/analyzers/FFTAnalyze.jsx","xsound/analyzers/TimeAnalyze.jsx","component/top/top.js","xsound/clips/AudioClip.jsx","xsound/clips/ClipContainer.jsx","xsound/TechniqueManager.js","pages/analyze.js","pages/Authentication/authentication.js","pages/detailedPage.js","pages/landingPage.js","pages/Listen.js","pages/review.js","pages/rootPage.js","layout.js","index.js"],"names":["AnimatePlayIcon","className","AnimatePauseIcon","param","interval","shape","width","grid","top","left","bottom","right","wave","AudioService","start","pos","X","stop","toggle","jumpTo","register","listener","audioEventListener","playRange","end","canPlay","isSource","sourcePlay","buffer","sprite","selected","context","get","source","createBufferSource","connect","destination","createTimeAnalyzer","canvas","analyzer","module","domain","setup","state","createFftAnalyzer","createOverviewAnalyzer","init","drag","event","startTime","endTime","range","setTimeOverviewRange","createAnalyzer","Date","getTime","doLoad","fileName","cb","console","log","resize","decode","arrayBuffer","dir","ready","audioBuffer","loaded","duration","currentTime","update","Math","floor","sampleRate","ClipCb","progress","ended","error","Error","window","alert","message","createAnalyzers","ajax","url","timeout","success","call","textStatus","AudioEventListener","audio","registeredClips","techniqueGroups","registerClip","clip","push","length","unregisterClip","filter","item","currentClip","undefined","progressX","stopAll","forEach","requestFocus","id","find","itm","getId","timeAnalyze","fftAnalyze","techniqueManager","timeOverviewAnalyzer","timeOverviewRange","setRange","registerTechnique","techniqueName","tech","addClipToTechnique","addClip","this","SoundXContext","createContext","AudioProvider","audioListener","Provider","value","props","children","Component","SongLoader","useContext","useState","playlist","setPlaylist","apiUrl","setTimeOverViewAnalyzer","useEffect","a","fetch","resp","ok","json","playLst","loadPlaylist","style","textAlign","padding","onChange","e","loadSong","target","map","idx","title","artists","round","places","power","pow","TimeOverviewAnalyzer","show","playing","canvasRef","createRef","songPath","current","setState","play","w","h","startMin","endMin","ref","height","onClick","contextType","nbSpace","n","index","PlayProgress","max","changed","posMin","fontSize","type","min","FFTAnalyze","TimeAnalyze","Top","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","Nav","to","Link","eventKey","AudioClip","posValue","currentPos","deleteClip","onDelete","toString","_","ClipContainer","clipList","secs","technique","background","containerBGs","TECHNIQUE_METAPHOR","TECHNIQUE_PUNCH_LINE","TECHNIQUE_IMAGERY","TechniqueManager","setShow","AddClipButton","cursor","Analyze","Authentication","Form","Row","Group","controlId","Label","Control","placeholder","Text","DetailedPage","LandingPage","Listen","Review","Root","exact","path","component","Layout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7af57e9c.chunk.js","sourcesContent":["import { FaPauseCircle, FaPlayCircle } from 'react-icons/fa'\n\nexport {\n    GoHome as HomeIcon \n} from \"react-icons/go\"\n\nexport {\n    FaChartBar as AnalysisIcon\n} from \"react-icons/fa\"\n\nexport {\n    ImHeadphones as ListenIcon\n} from \"react-icons/im\"\n\nexport {\n    BiMessageCheck as ReviewIcon\n} from \"react-icons/bi\"\n\nexport {\n    MdPlaylistAdd as AddClipIcon\n} from \"react-icons/md\"\n\nexport {\n    RiPlayList2Fill as PlayListsIcon,\n} from \"react-icons/ri\"\n\nexport {\n    TiDeleteOutline as DeleteClipIcon\n} from 'react-icons/ti'\n\nexport const AnimatePlayIcon = () => (\n    <FaPlayCircle className=\"react-jinke-music-player-play-icon\" />\n)\nexport const AnimatePauseIcon = () => (\n    <FaPauseCircle className=\"react-jinke-music-player-pause-icon\" />\n)","import {X} from \"xsound\";\n\nconst param={\n    interval: 'auto',\n    shape        : 'rect',\n    width: 1,\n    grid: 'none',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    // wave: 'rgb(255,31,46)',\n    wave: 'rgb(25,48,255)',\n    // textinterval : 10\n};\n\nclass AudioService {\n\n    audioEventListener;\n\n    start = (pos) => {\n        X('audio').start(pos);\n    };\n\n    stop = () => {\n        X('audio').stop();\n    };\n\n    toggle = () => {\n        X('audio').toggle(X('audio').param('currentTime'));\n    };\n\n    jumpTo = (pos) => {\n        X('audio').param('currentTime', pos);    // The range of value is between 0 and audio duration\n    };\n\n    register=(listener)=>{\n      this.audioEventListener=listener;\n    }\n\n    playRange=(start,end)=>{\n\n        X('audio').start(start, end);\n    };\n\n    canPlay=()=>{\n        return X('audio').isSource();\n    };\n\n    sourcePlay=(start,end)=>{\n        const buffer = X('audio').sprite({ selected : [start, end] });\n        const context = X.get();\n        const source  = context.createBufferSource();\n\n        source.buffer = buffer.selected;\n\n        source.connect(context.destination);\n\n        source.start(0);\n\n    };\n    createTimeAnalyzer=(canvas)=>{\n        const analyzer = X('audio').module('analyser').domain('time');\n        analyzer.setup(canvas).state(true);\n        analyzer.param(param);\n        return analyzer;\n\n    }\n    createFftAnalyzer=(canvas)=>{\n        const analyzer = X('audio').module('analyser').domain('fft');\n        analyzer.setup(canvas).state(true);\n        analyzer.param(param);\n        return analyzer;\n    }\n\n    createOverviewAnalyzer=()=>{\n        return {\n            init: (canvas) => {\n\n                const analyzer = X('audio').module('analyser').domain(\"timeoverview\", 0);\n                // X('audio').param('loop', true);\n                analyzer.setup(canvas).state(true);\n\n                analyzer.param('mode', 'sprite');\n\n                analyzer.drag((event, startTime, endTime) => {\n                    const range={start: startTime, end: endTime};\n                    this.stop();\n                    // overView.setRange(range);\n                    this.audioEventListener.setTimeOverviewRange(range);\n\n                });\n                // new EventOverrides(analyzer, canvas);\n\n                analyzer.param(param);\n            }\n\n        };\n    };\n\n\n    createAnalyzer = () => {\n\n           const analyzer=this.createOverviewAnalyzer();\n            const key=`timeOverview-${new Date().getTime()}`;\n            return analyzer;\n\n    };\n\n    doLoad = (fileName, cb) => {\n\n        console.log(\"X('audio').start\");\n\n        X('audio').resize(16384);\n\n        X('audio').setup({\n            decode: (arrayBuffer) => {\n                // The 1st argument is the instance of `ArrayBuffer`\n                console.log('decode');\n                console.dir(arrayBuffer);\n            },\n            ready: (audioBuffer) => {\n                // The 1st argument is the instance of `AudioBuffer`\n                console.log('ready');\n                this.jumpTo(0);\n                this.audioEventListener.loaded(audioBuffer.duration)\n            },\n            start: (source, currentTime) => {\n                // The 1st argument is the instance of `AudioBufferSourceNode`\n                // The 2nd argument is current time (position) in the played audio\n                console.log('start');\n                console.dir(source);\n                console.dir(currentTime);\n            },\n            stop: (source, currentTime) => {\n                // The 1st argument is the instance of `AudioBufferSourceNode`\n                // The 2nd argument is current time (position) in the played audio\n                console.log('stop');\n                console.dir(source);\n                console.dir(currentTime);\n            },\n            update: (source, currentTime) => {\n                const index = Math.floor(currentTime * source.buffer.sampleRate)\n                const n100msec = 0.100 * source.buffer.sampleRate;\n\n                if ((index % n100msec) !== 0) {\n                    return;\n                }\n\n                // console.log('update');\n                // console.dir(source);\n                // console.dir(currentTime);\n                // cb.progress(currentTime);\n                if (this.ClipCb){\n                    this.ClipCb(currentTime)\n                }\n\n                this.audioEventListener.progress(currentTime);\n\n            },\n            ended: (source, currentTime) => {\n                // The 1st argument is the instance of `AudioBufferSourceNode`\n                // The 2nd argument is current time (position) in audio\n                console.log('ended');\n                console.dir(source);\n                console.dir(currentTime);\n\n                // cb.ended();\n            },\n            error: error => {\n                // The 1st argument is either `Error` or `null`\n                if (error instanceof Error) {\n                    window.alert(error.message);\n                } else {\n                    window.alert('Error : decodeAudioData');\n                }\n            }\n        });\n\n        // this.initAnalyser(canvas);\n        if (cb.createAnalyzers) {\n            cb.createAnalyzers();\n        }\n\n        X.ajax({\n            url: fileName,\n            timeout: 60000,\n            success: (event, arrayBuffer) => {\n                // The 1st argument is `XMLHttpRequestProgressEvent`\n                // The 2nd argument is `ArrayBuffer`[ArrayBuffer -> AudioBuffer]\n\n\n                    X('audio').ready.call(X('audio'), arrayBuffer);\n\n\n            },\n            error: (event, textStatus) => {\n                // The 1st argument is `XMLHttpRequestProgressEvent`\n                // The 2nd argument is either 'error' or 'timeout'\n\n                console.log('error');\n                console.dir(event);\n                console.dir(textStatus);\n            },\n            progress: (event) => {\n                // The 1st argument is `XMLHttpRequestProgressEvent`\n\n                console.log('progress');\n                console.dir(event);\n            }\n        });\n    }\n\n}\n\nexport default AudioService;","\nclass AudioEventListener {\n\n    registeredClips = [];\n    audio;\n    currentClip;\n    timeOverviewRange;\n    techniqueGroups=[];\n    duration=0;\n\n    timeOverviewAnalyzer;\n    timeAnalyze;\n    fftAnalyze;\n    techniqueManager;\n    progressX;\n\n    constructor(audio) {\n        this.audio = audio;\n        audio.register(this);\n    }\n\n    registerClip = (clip) => {\n        this.registeredClips.push(clip);\n        console.log(`register: ${clip}`);\n        console.log(`size: ${this.registeredClips.length}`);\n    };\n\n    unregisterClip = (clip) => {\n        this.registeredClips =\n            this.registeredClips.filter((item) => item !== clip);\n        if (this.registeredClips.length<=0){\n            this.currentClip=undefined;\n        }\n        console.log(`unRegister: ${clip}`);\n        console.log(`size: ${this.registeredClips.length}`);\n\n    };\n\n    progress=(pos)=>{\n        if(this.currentClip){\n            this.currentClip.progress(pos)\n        }\n        if (this.progressX){\n            this.progressX.progress(pos)\n        }\n    }\n    stopAll=()=>{\n        this.registeredClips.forEach((clip)=>{\n            clip.stop()\n        });\n        if (this.progressX){\n            this.progressX.stop()\n        }\n    }\n    requestFocus=(id)=>{\n        this.stopAll()\n        this.currentClip=this.registeredClips.find((itm)=>itm.getId()===id);\n    }\n\n    loaded=(duration)=>{\n        if (this.timeAnalyze){\n            this.timeAnalyze.loaded(duration);\n        }\n        if (this.fftAnalyze){\n            this.fftAnalyze.loaded(duration);\n        }\n        if (this.progressX){\n            this.progressX.loaded(duration);\n        }\n        if (this.techniqueManager){\n            this.techniqueManager.loaded(duration)\n        }\n        if (this.timeOverviewAnalyzer){\n            this.timeOverviewAnalyzer.loaded(duration)\n        }\n    }\n\n\n    setTimeOverviewRange=(range)=>{\n        this.stopAll();\n        this.timeOverviewRange=range;\n        if (this.timeOverviewAnalyzer){\n            this.timeOverviewAnalyzer.setRange(range)\n        }\n\n    };\n\n    registerTechnique=(techniqueName,tech)=> {\n        this.techniqueGroups[techniqueName] = tech;\n    };\n\n    addClipToTechnique=(techniqueName)=>{\n        const tech=this.techniqueGroups[techniqueName];\n        if (tech){\n            tech.addClip();\n        }\n    }\n\n}\n\nexport default AudioEventListener;","import React, {createContext, Component} from 'react';\nimport AudioService from \"./core/AudioService\"\nimport AudioEventListener from \"./AudioEventListener\";\n\nexport const SoundXContext = createContext();\n\nexport class AudioProvider extends Component {\n    render() {\n        const audio = new AudioService();\n        const audioListener = new AudioEventListener(audio)\n        return (\n            <SoundXContext.Provider value={{\n                audio,\n                audioListener,\n            }}>\n                {this.props.children}\n            </SoundXContext.Provider>\n        );\n    }\n}\n\n","\nimport React, {useContext, useEffect, useState} from 'react';\nimport {PlayListsIcon} from \"../util/appIcons\";\nimport {SoundXContext} from \"./AudioProvider\";\n\nexport function SongLoader(props) {\n    const {audio,audioListener} = useContext(SoundXContext);\n\n    const [playlist, setPlaylist] = useState([]);\n    const {apiUrl,setTimeOverViewAnalyzer}=props;\n\n    useEffect(() => {\n        const loadPlaylist = async () => {\n\n            try {\n                const resp = await fetch(`${apiUrl}/audio/playlist`);\n                if (resp.ok) {\n                    const playLst = await resp.json();\n                    setPlaylist(playLst);\n                }\n            } catch (e) {\n                alert(`problem loading songs: \"${e.message}\"`)\n            }\n        };\n        loadPlaylist();\n\n    }, []);\n\n\n\n\n    const songSelected = (e) => {\n        if (audio){\n            audio.stop()\n        };\n\n        audioListener.timeOverviewAnalyzer.loadSong(e.target.value);\n    };\n\n\n    return (\n        <div style={{textAlign: \"left\", padding: 10}}>\n            <PlayListsIcon/>\n            <select onChange={songSelected}>\n                {\n                    playlist.map((itm, idx) => {\n                        return <option key={idx} value={idx}>\n                            {itm.title} {\"  ----  \"} [{itm.artists}]\n                        </option>\n                    })\n                }\n\n            </select>\n        </div>\n    );\n};","import React, {Component, createRef} from 'react';\nimport {SoundXContext} from \"../AudioProvider\";\nimport {AnimatePauseIcon, AnimatePlayIcon} from \"../../util/appIcons\";\n\nexport const round=(value,places)=>{\n    const power=Math.pow(10,2);\n    return Math.round(value*power)/power;\n}\nexport class TimeOverviewAnalyzer extends Component {\n    state = {\n        range: {start: 0, end: 50},\n        show: false,\n        analyzer: null,\n        playing:false\n    }\n\n    static contextType = SoundXContext;\n    canvasRef = createRef();\n\n    componentDidMount() {\n        this.context.audioListener.timeOverviewAnalyzer = this;\n\n    }\n\n    componentWillUnmount() {\n        this.context.audioListener.timeOverviewAnalyzer = null;\n    }\n\n    loaded(duration) {\n        const range=this.state.range;\n        range.end=duration;\n        this.setState({show: true,range});\n\n\n        /*     const canvas = this.canvasRef.current;\n             this.context.audio.createOverviewAnalyzer(canvas);*/\n\n    }\n\n    loadSong = (songPath) => {\n        const audio = this.context.audio;\n        audio.doLoad(`${this.props.apiUrl}/audio/load/${songPath}`, {\n\n            createAnalyzers: () => {\n                const analyzer = audio.createAnalyzer();\n                const canvas = this.canvasRef.current;\n                analyzer.init(canvas);\n             }\n        })\n\n    };\n\n    setRange = (range) => {\n        this.setState({range})\n    }\n    toggle=()=>{\n        if (this.state.playing){\n            this.stop()\n        }else{\n            this.play()\n        }\n    }\n\n     stop = () => {\n        this.setState({playing:false})\n        this.context.audio.stop();\n    }\n     play = () => {\n         this.setState({playing:true})\n        const range=this.state.range;\n        this.context.audio.playRange(range.start, range.end);\n    }\n    render() {\n\n        const {w, h} = this.props;\n        const {range, show} = this.state;\n\n        const startMin=round(range.start/60,2);\n        const endMin=round(range.end/60,2);\n\n        return (\n            <div>\n                {\n                <div>\n                    <canvas ref={this.canvasRef} width={w} height={h}></canvas>\n                    <br/>\n                    {show &&\n                        <div><span>{startMin}</span> - <span>{endMin}</span><br/>\n                            <div onClick={this.toggle}>{this.state.playing ? <AnimatePauseIcon/> :\n                                <AnimatePlayIcon/>}</div>\n                        </div>   }\n                </div>\n                }\n\n            </div>\n        )\n    }\n\n}","import React, { Component, useState } from 'react';\nimport { AnimatePauseIcon, AnimatePlayIcon } from \"../util/appIcons\";\nimport { SoundXContext } from \"./AudioProvider\";\nimport { round } from \"./analyzers/TimeOverviewAnalyzer\";\n\nconst nbSpace =(n)=>{\n    let result = \"\";\n for (let index = 0; index < n; index++) {\n     result = result + \n     <span>&nbsp;</span>\n }\n    return  <span>&nbsp;</span> ;  \n} \nexport class PlayProgress extends Component {\n    static contextType = SoundXContext;\n\n    state = {\n        pos: 0,\n        playing: false,\n        max: 0,\n        show: false\n    };\n\n    // const [pos, setPos] = useState(0);\n    componentDidMount() {\n        this.context.audioListener.progressX = this;\n    }\n\n    componentWillUnmount() {\n        this.context.audioListener.progressX = null;\n    }\n\n    toggle = () => {\n        this.context.audio.toggle();\n        const playing = !this.state.playing;\n        this.setState({ playing });\n\n    };\n    stop = (pos) => {\n        this.context.audio.stop()\n    };\n\n    progress = (pos) => {\n        this.setState({ pos });\n    };\n\n    changed = (e) => {\n        const pos = e.target.value;\n        this.setState({ pos });\n        this.context.audio.jumpTo(pos);\n    };\n\n    loaded = (duration) => {\n        this.setState({ max: duration });\n        this.setState({ show: true })\n    }\n\n    render() {\n        const { max, pos, show, playing } = this.state;\n        const posMin = round(pos / 60, 2);\n        const endMin = round(max / 60, 2);\n        return (\n            <div>\n                {show &&\n                    <div>\n\n                        <span onClick={this.toggle}>\n                            {playing ? <AnimatePauseIcon /> : <AnimatePlayIcon />}\n                            {nbSpace(2)}\n                            <span style={{ fontSize: 12 }}>{posMin}</span>\n                            {nbSpace(2)}\n                            <input onChange={this.changed}\n                                type={\"range\"}\n                                min={0}\n                                max={max}\n                                value={pos}\n                                style={{ width: 700 }}\n                            /> {endMin}\n                        </span>\n                    </div>\n                }\n            </div>\n        );\n    }\n\n}\n\n","import React, {Component, createRef} from 'react';\nimport {SoundXContext} from \"../AudioProvider\";\n\nexport class FFTAnalyze extends Component{\n    state={\n        show:false\n    }\n\n    static contextType = SoundXContext;\n    canvasRef=createRef();\n\n    componentDidMount() {\n        this.context.audioListener.fftAnalyze=this;\n    }\n    componentWillUnmount() {\n        this.context.audioListener.fftAnalyze=null;\n    }\n\n    loaded=()=>{\n\n        this.setState({show:true});\n        const canvas = this.canvasRef.current;\n        this.context.audio.createFftAnalyzer(canvas);\n\n    }\n\n    render() {\n        const {w, h} = this.props;\n\n        return (\n            <div>\n                {this.state.show &&\n                <svg ref={this.canvasRef} width={w} height={h}> </svg>\n                }\n            </div>\n        );\n    }\n}","import React, {Component, createRef} from 'react';\nimport {SoundXContext} from \"../AudioProvider\";\n\nexport class TimeAnalyze extends Component{\n    state={\n        show:false\n    }\n\n    static contextType = SoundXContext;\n    canvasRef=createRef();\n\n    componentDidMount() {\n        this.context.audioListener.timeAnalyze=this;\n    }\n    componentWillUnmount() {\n        this.context.audioListener.timeAnalyze=null;\n    }\n\n    loaded=()=>{\n        this.setState({show:true});\n        const canvas = this.canvasRef.current;\n        this.context.audio.createTimeAnalyzer(canvas);\n  }\n\n    render() {\n        const {w, h} = this.props;\n\n        return (\n            <div>\n                {this.state.show &&\n                <div>\n                    <svg ref={this.canvasRef} width={w} height={h}> </svg>\n                </div>\n                }\n            </div>\n        );\n    }\n}","import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { AnalysisIcon, HomeIcon, ListenIcon, ReviewIcon } from \"../../util/appIcons\";\nimport Dropdown from \"./dropdown\";\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\nimport {SongLoader} from \"../../xsound/SongLoader\";\nimport {PlayProgress} from \"../../xsound/PlayProgress\"\nimport { FFTAnalyze } from \"../../xsound/analyzers/FFTAnalyze\";\nimport { TimeAnalyze } from \"../../xsound/analyzers/TimeAnalyze\";\n\n// const apiUrl = \"http://localhost:3030\";\nconst apiUrl = \"\";\n\n\n\nconst Top = () => {\n    return <div style={{ height: 120, }}>\n       \n\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"white\">\n            <Navbar.Brand href=\"/\">BaRs</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Link to=\"/\" className=\"nav-link\" ><HomeIcon />Home</Link>\n                    <Link to=\"/analyze\" className=\"nav-link\" ><AnalysisIcon />Analyze </Link>\n                    <Link to=\"/listen\" className=\"nav-link\" > <ListenIcon /> Listen</Link>\n                    <Link to=\"review\" className=\"nav-link\" ><ReviewIcon/>Review </Link>\n\n                </Nav>\n                <Nav>\n                    \n                        {/* <NavDropdown alignRight={true} title=\"Songs\" id=\"collasible-nav-dropdown\">\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.2\">Another action branston jr</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                        </NavDropdown> */}\n            <SongLoader apiUrl={apiUrl} />\n                   \n                    <Nav.Link eventKey={2} href=\"#memes\">   </Nav.Link>\n                </Nav>\n                \n            </Navbar.Collapse>\n        </Navbar>\n        <ul className=\"timefft\">\n        <li><FFTAnalyze key={1} w={80} h={50}/></li>\n         <li><PlayProgress/></li>\n          <li><TimeAnalyze key={2} w={150} h={50}/></li>\n         </ul>\n         </div>\n\n}\n\nexport default Top;","import React, {Component} from 'react';\nimport _ from 'lodash'\nimport {AnimatePauseIcon, AnimatePlayIcon, DeleteClipIcon} from \"../../util/appIcons\";\nimport {SoundXContext} from \"../AudioProvider\";\n\nexport class AudioClip extends Component {\n    static contextType = SoundXContext;\n\n    state = {\n        playing: false,\n        posValue: 0,\n        id:this.props.id,\n        start:this.props.start,\n        end:this.props.end,\n        currentPos:this.props.start,\n    };\n    componentDidMount() {\n        this.context.audioListener.registerClip(this);\n    }\n    componentWillUnmount() {\n        this.stop();\n        this.context.audioListener.unregisterClip(this);\n    }\n\n    deleteClip=()=>{\n        this.props.onDelete(this.props.id);\n    }\n\n    progress=(pos)=>{\n        const {audio}=this.context;\n        const {start,end,currentPos}=this.state;\n        const posValue=pos - Math.floor(start);\n        this.setState({posValue,\n            currentPos:pos\n        });\n        if (pos >= end) {\n            this.setState({posValue:0});\n            audio.jumpTo(start)\n        }\n    };\n\n    stop=()=>{\n        if (this.state.playing) {\n            this.setState({playing: false});\n            const {audio} = this.context;\n            audio.stop();\n        }\n    }\n\n    toggle = () => {\n        const {audio}=this.context;\n        const {id,playing,currentPos}=this.state;\n        if (!playing){\n            this.context.audioListener.requestFocus(id);\n            audio.jumpTo(currentPos)\n        }\n        audio.toggle();\n        this.setState({playing:!playing});\n\n    };\n\n    getId=()=>{\n        return this.state.id;\n    };\n\n    render() {\n\n        const {playing,posValue,start,end}=this.state;\n        const playMap = _.range(Math.floor(start), Math.floor(end) + 1);\n        const max = playMap.length;\n        const w = 100;//max * 11;\n\n\n        const changed = (e) => {\n            // props.changed(e.target.value);\n            console.log(e.target.value);\n        }\n\n\n\n        return (\n            <div className={\"audio-clip\"} style={{width:w}}>\n                <span><span onClick={this.toggle}>{playing ? <AnimatePauseIcon /> : <AnimatePlayIcon />}</span>\n                <input onChange={changed}\n                       type={\"range\"}\n                       min={0}\n                       max={max}\n                       value={posValue}\n                       style={{width: \"60%\"}}\n                />\n                <DeleteClipIcon onClick={this.deleteClip}/>\n                </span>\n            </div>\n        );\n    }\n    toString=()=>{\n\n        return this.getId();\n    };\n\n\n};","import React, {Component} from 'react';\nimport {AudioClip} from \"./AudioClip\";\nimport {SoundXContext} from \"../AudioProvider\";\nimport {containerBGs} from \"../TechniqueManager\";\n\n\nexport class ClipContainer extends Component {\n    static contextType = SoundXContext;\n\n    state = {\n        clipList: []\n    };\n\n    componentDidMount() {\n        const {technique} = this.props;\n        this.context.audioListener.registerTechnique(technique, this);\n    }\n\n    addClip = () => {\n        if (this.state.clipList.length<this.props.max) {\n            const range = this.context.audioListener.timeOverviewRange;\n            if(range) {\n                const secs = Math.floor(range.end - range.start);\n                if ( secs > 10) {\n                    const id = new Date().getTime();\n                    const clipList = [...this.state.clipList, {id, ...range}];\n                    this.setState({clipList});\n                } else {\n                    alert(`Selected clips of ${secs} is less than 10secs`)\n\n                }\n            }\n\n        }else{\n            alert(`Cannot exceeded max clips of ${this.props.max}`)\n        }\n    };\n\n\n    deleteClip = (id) => {\n        const clipList = this.state.clipList.filter((itm) => itm.id !== id);\n        this.setState({clipList});\n    };\n\n    render() {\n        const {clipList} = this.state;\n        const {technique} = this.props;\n\n        return <>\n            {clipList && clipList.length > 0 &&\n\n            <div className={\"clip-container\"} style={{background: containerBGs[technique]}}>\n                <ul id={\"navlist\"}>\n                    {clipList.map((clip, idx) => {\n                        return <li key={clip.id}>\n                            <AudioClip\n                                id={clip.id}\n                                start={clip.start}\n                                end={clip.end}\n                                onDelete={() => this.deleteClip(clip.id)}\n                            />\n                        </li>\n                    })}\n                </ul>\n            </div>\n            }\n        </>\n    }\n\n}","\nimport React, {useContext,useState,useEffect} from 'react';\nimport {ClipContainer} from \"./clips/ClipContainer\";\nimport {AddClipIcon} from \"../util/appIcons\";\nimport {SoundXContext} from \"./AudioProvider\";\n\nconst TECHNIQUE_METAPHOR = 'Metaphor';\nconst TECHNIQUE_PUNCH_LINE = 'Punch_line';\nconst TECHNIQUE_IMAGERY = 'Imagery';\n\nexport const containerBGs = {\n    [TECHNIQUE_METAPHOR]: \"#2e8b57\",\n    [TECHNIQUE_PUNCH_LINE]: \"rgba(255,105,104,0.96)\",\n    [TECHNIQUE_IMAGERY]: \"#237aff\",\n}\n\nexport const TechniqueManager=(props) =>{\n    const [show, setShow] = useState(false);\n    const { audioListener} = useContext(SoundXContext);\n\n    useEffect(() => {\n        audioListener.techniqueManager={loaded};\n        return () => {\n            audioListener.techniqueManager=null;\n        };\n    }, []);\n\n    const loaded=()=>{\n        setShow(true)\n    }\n    const addClip = (technique) => {\n        audioListener.addClipToTechnique(technique)\n    };\n    const AddClipButton = (props) => {\n        const {technique}=props;\n        return <li\n            onClick={() => addClip(technique)}\n            style={{background: containerBGs[technique],cursor:\"pointer\"}}>\n            <span><AddClipIcon/> Add to {technique}</span>\n        </li>\n    }\n    return (\n        <div>\n            { show &&\n                <div>\n                <ul className={\"technique\"}>\n                    <AddClipButton key={1} technique={TECHNIQUE_METAPHOR}/>\n                    <AddClipButton key={2} technique={TECHNIQUE_PUNCH_LINE}/>\n                    <AddClipButton key={3} technique={TECHNIQUE_IMAGERY}/>\n                </ul>\n                < ClipContainer technique={TECHNIQUE_METAPHOR} max={4}/>\n                <ClipContainer technique={TECHNIQUE_PUNCH_LINE} max={2}/>\n                <ClipContainer technique={TECHNIQUE_IMAGERY} max={3}/>\n                </div>\n            }\n        </div>\n    );\n};","import { Link } from \"react-router-dom\";\nimport { TimeOverviewAnalyzer } from \"../xsound/analyzers/TimeOverviewAnalyzer\";\nimport { TechniqueManager } from \"../xsound/TechniqueManager\";\n\nconst Analyze = () => {\n    return <div>\n        \n        <TimeOverviewAnalyzer apiUrl={\"\"} key={\"analyzer\"} w={800} h={100} />\n        <TechniqueManager/>\n        \n    </div>;\n}\n \nexport default Analyze;","import \"./style.css\"\nimport { Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, Container, Row, Col } from 'react-bootstrap';\n\nconst Authentication = () => {\n    return <div className=\"backgroundPic\">\n            <div id=\"title\"> </div> \n            <div className=\"auth-body\">\n                <div className=\"pForm\">\n                    <div id=\"form-background\"></div>\n                    <div id=\"form\">\n                        <Form>\n                            <Row>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Label>Full Name</Form.Label>\n                                    <Form.Control type=\"email\" placeholder=\"First Name\" />\n                                </Form.Group>\n                            </Row>\n                            <Row>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Control type=\"email\" placeholder=\"Last Name\" />\n                                </Form.Group>\n                            </Row>\n                            <Row>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Label>Authentication</Form.Label>\n                                    <Form.Control type=\"email\" placeholder=\"login@email.com\" />\n                                    <Form.Text className=\"text-muted\">\n                                        We'll never share your email with anyone else.\n                                    </Form.Text>\n                                </Form.Group>\n                            </Row>\n                            <Row>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Control type=\"email\" placeholder=\"Password\" />\n                                </Form.Group>\n                            </Row>\n                        </Form>  \n                    </div>\n                </div>\n            </div>\n\n       \n\n        {/* <Link to=\"/landingpage\">New Songs</Link> */}\n    </div>\n}\nexport default Authentication;","import { Link } from \"react-router-dom\";\n\nconst DetailedPage = () => {\n    return <div>\n        DetailedPage\n        \n    </div>;\n}\n \nexport default DetailedPage;","import { Link } from \"react-router-dom\";\n\nconst LandingPage = () => {\n    return <div>\n        Landing Page\n    </div>;\n}\n \nexport default LandingPage;","import { Link } from \"react-router-dom\";\nimport { TimeOverviewAnalyzer } from \"../xsound/analyzers/TimeOverviewAnalyzer\";\nconst Listen = () => {\n    return <div>\n        Listen\n        \n    </div>;\n}\n \nexport default Listen;","import { Link } from \"react-router-dom\";\n\nconst Review = () => {\n    return <div>\n        Review\n        \n    </div>;\n}\n \nexport default Review;","import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Analyze from \"./analyze\";\nimport Authentication from \"./Authentication/authentication\";\nimport DetailedPage from \"./detailedPage\";\nimport LandingPage from \"./landingPage\";\nimport Listen from \"./Listen\";\nimport Review from \"./review\";\n\n\nconst Root = () => {\n    return  <div>\n        <Route exact path=\"/\" component={Authentication} />\n        <Route exact path=\"/landingpage\" component={LandingPage} />\n        <Route exact path=\"/analyze\" component={Analyze} />\n        <Route exact path=\"/listen\" component={Listen} />\n        <Route exact path=\"/review\" component={Review} />\n        <Route exact path=\"/detailed\" component={DetailedPage} />\n        \n    </div>\n\n}\n \nexport default Root;","import { BrowserRouter as Router, Route } from \"react-router-dom\";\n// import App from \"./App\";\nimport Top from \"./component/top/top\";\nimport Root from \"./pages/rootPage\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nconst Layout = () => {\n    return (<div className=\"App\">\n        <Router>\n            <Top />\n            <div style={{ height: \"calc(100vh - 120px)\", }}>\n                {/* <App /> */}\n                <Root />\n            </div>\n            </Router>\n    </div>);\n}\n\nexport default Layout;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from '../src/App';\nimport Layout from './layout';\nimport { AudioProvider } from './xsound/AudioProvider';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <AudioProvider>\n    {/* <App /> */}\n    <Layout/>\n    </AudioProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}