{"version":3,"sources":["xsound/analyzers/TimeOverviewAnalyzer.jsx","xsound/analyzers/EventOverrides.js","xsound/ServiceX.js","xsound/AudioEventListener.js","xsound/AudioProvider.jsx","pages/Authentication/newUser.jsx","pages/Authentication/existingUser.jsx","pages/Authentication/authentication.jsx","util/appIcons.js","pages/component/top/top.js","xsound/clips/AudioClip.jsx","xsound/clips/ClipList.js","xsound/analyzers/TimeAnalyze.jsx","xsound/analyzers/FFTAnalyze.jsx","xsound/Playerx.jsx","pages/analyze.js","pages/detailedPage.js","pages/landingPage.js","pages/Listen.js","pages/review.js","pages/rootPage.js","layout.js","index.js"],"names":["TimeOverviewAnalyzer","state","range","start","end","canvasRef","createRef","setRange","setState","analyzer","this","props","canvas","current","init","w","h","ref","width","height","onClick","play","stop","Component","EventOverrides","isDown","mode","DRAG_MODE_SPRITE","offsetX","startTime","endTime","length","sampleRate","onStart","event","draw","type","getOffsetX","onMove","preventDefault","onEnd","drag","callback","drawNode","move","test","navigator","userAgent","graphics","CANVAS","SVG","svg","Object","prototype","toString","call","removeEventListener","window","addEventListener","HTMLCanvasElement","context","getContext","SVGElement","pageX","touches","DRAG_MODE_UPDATE","param","interval","shape","grid","top","left","bottom","right","wave","ServiceX","pos","X","toggle","jumpTo","register","listener","audioEventListener","playClip","canPlay","isSource","sourcePlay","buffer","sprite","selected","get","source","createBufferSource","connect","destination","getTimeAnalyzer","module","domain","setup","getFftAnalyzer","createOverviewAnalyzer","overView","overViewAnalyzer","setTimeOverviewRange","createAnalyzer","key","Date","getTime","doLoad","fileName","cb","console","log","resize","decode","arrayBuffer","dir","ready","audioBuffer","duration","currentTime","update","Math","floor","progress","ClipCb","ended","error","Error","alert","message","createAnalyzers","ajax","url","timeout","success","textStatus","AudioEventListener","audio","registeredClips","techniqueGroups","registerClip","clip","push","unregisterClip","filter","item","currentClip","undefined","stopAll","forEach","requestFocus","id","find","itm","getId","timeOverviewRange","registerTechnique","techniqueName","tech","addClipToTechnique","addClip","SoundXContext","createContext","AudioProvider","audioListener","Provider","value","children","newUser","Form","md","span","offset","Row","Col","Group","controlId","Label","Control","placeholder","Text","className","Button","to","activeClassName","existingUser","Authentication","render","location","TransitionGroup","CSSTransition","classNames","exact","path","component","AnimatePlayIcon","AnimatePauseIcon","Top","style","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","Nav","class","NavDropdown","alignRight","title","Item","Divider","Link","eventKey","AudioClip","playing","posValue","currentPos","deleteClip","onDelete","max","_","onChange","e","target","min","contextType","ClipList","clipList","secs","technique","background","containerBGs","map","idx","TimeAnalyze","FFTAnalyze","TECHNIQUE_METAPHOR","TECHNIQUE_PUNCH_LINE","TECHNIQUE_IMAGERY","PlayerX","useRef","useContext","useState","setPlaying","loaded","setLoaded","setPos","setMax","playlist","setPlaylist","timeOverViewAnalyzer","setTimeOverViewAnalyzer","useEffect","a","fetch","resp","ok","json","playLst","loadPlaylist","AddClipButton","cursor","textAlign","padding","track","d","p","load","artists","Analyze","DetailedPage","LandingPage","Listen","Review","Root","Layout","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.544cf357.chunk.js","sourcesContent":["import React, { Component, createRef } from 'react';\n\n\n\nexport class TimeOverviewAnalyzer extends Component {\n    // static contextType = SoundXContext;\n\n    state = {\n        range: { start: 0, end: 50 }\n    }\n    canvasRef = createRef();\n\n    componentDidMount() {\n        const { analyzer } = this.props;\n        const canvas = this.canvasRef.current;\n        analyzer.init(canvas, this);\n    }\n\n    setRange = (range) => {\n        this.setState({ range })\n    }\n\n    render() {\n\n        const { analyzer, w, h } = this.props;\n        const { range } = this.state;\n\n\n        const stop = () => {\n            analyzer.stop()\n        }\n        const play = () => {\n            analyzer.play(range.start, range.end);\n        }\n        return (\n            <div>\n                    <div>\n                        <span>{range.start} sec</span> - <span>{range.end} sec</span><br />\n                        <canvas ref={this.canvasRef} width={w} height={h}></canvas>\n                        {/*<svg ref={this.canvasRef} width={w} height={h}></svg>*/}\n                    </div>\n            \n                <div>\n                    <button onClick={play}>play</button>\n                    <button onClick={stop}>stop</button>\n                </div>\n            </div>\n        )\n    }\n\n}","\n\nclass EventOverrides  {\n    static DRAG_MODE_UPDATE = 'update';\n    static DRAG_MODE_SPRITE = 'sprite';\n\n    static CANVAS = 'canvas';\n    static SVG    = 'svg';\n\n\n    analyzer;\n    isDown = false;\n    canvas;\n    graphics;\n    mode=EventOverrides.DRAG_MODE_SPRITE;\n    // for Audio Sprite\n    offsetX   = 0;\n    startTime = 0;\n    endTime   = 0;\n    length=0;\n    sampleRate=44100;\n\n\n\n    constructor(analyzer,canvas){\n        this.analyzer=analyzer;\n        this.canvas=canvas;\n\n\n        if (canvas instanceof HTMLCanvasElement) {\n            this.graphics = EventOverrides.CANVAS;\n            this.context  = this.canvas.getContext('2d');\n        } else if (canvas instanceof SVGElement) {\n            this.graphics = EventOverrides.SVG;\n        }\n        analyzer.drag=this.drag;\n\n        // this.superDraw=analyzer.draw;\n        // analyzer.draw=this.draw;\n\n    }\n\n    /**\n     * This method is event audioEventlistener for drawing the rectangle.\n     * @param {Event} event This argument is the instance of `Event`.\n     */\n    onStart=(event) =>{\n        this.draw(event, event.type, this.getOffsetX(event));\n        this.isDown = true;\n    }\n\n    /**\n     * This method is event audioEventlistener for drawing the rectangle.\n     * @param {Event} event This argument is the instance of `Event`.\n     */\n    onMove=(event) =>{\n        if (this.isDown) {\n            event.preventDefault();  // for Touch Panel\n            this.draw(event, event.type, this.getOffsetX(event));\n        }\n\n\n    }\n\n    /**\n     * This method is event audioEventlistener for drawing the rectangle.\n     * @param {Event} event This argument is the instance of `Event`.\n     */\n    onEnd=(event) =>{\n        if (this.isDown) {\n\n            this.draw(event, event.type, this.getOffsetX(event));\n            this.isDown = false;\n        }\n\n    }\n\n    /**\n     * This method returns X coordinate from `Event` object.\n     * @param {Event} event This argument is the instance of `Event`.\n     * @return {number} This is returned as X coordinate.\n     */\n    getOffsetX(event) {\n        if (event.pageX) {\n            return event.pageX;\n        }\n\n        if (event.touches[0]) {\n            return event.touches[0].pageX;\n        }\n\n        return this.analyzer;\n    }\n\n    /**\n     * This method registers event audioEventlistener for setting current time by drag.\n     * @param {function} callback This argument is invoked when current time is changed.\n     * @return {TimeOverviewAnalyzer} This is returned for method chain.\n     */\n    drag=(callback) =>{\n        let drawNode = null;\n\n        let start = '';\n        let move  = '';\n        let end   = '';\n\n        // Touch Panel ?\n        if (/iPhone|iPad|iPod|Android/.test(navigator.userAgent)) {\n            start = 'touchstart';\n            move  = 'touchmove';\n            end   = 'touchend';\n        } else {\n            start = 'mousedown';\n            move  = 'mousemove';\n            end   = 'mouseup';\n        }\n\n        switch (this.graphics) {\n            case EventOverrides.CANVAS:\n                drawNode = this.canvas;\n                break;\n            case EventOverrides.SVG:\n                drawNode = this.svg;\n                break;\n            default:\n                return this;\n        }\n\n        this.callback = Object.prototype.toString.call(callback) === '[object Function]' ? callback : () => {};\n\n\n        drawNode.removeEventListener(start, this.analyzer.onStart, true);\n        drawNode.removeEventListener(move, this.analyzer.onMove, true);\n        window.removeEventListener(end, this.analyzer.onEnd, true);\n\n        drawNode.addEventListener(start, this.onStart, true);\n        drawNode.addEventListener(move, this.onMove, true);\n        window.addEventListener(end, this.onEnd, true);\n\n        return this.analyzer;\n    }\n\n\n\n}\n\nexport default EventOverrides;","import {X} from \"xsound\";\nimport {TimeOverviewAnalyzer} from \"./analyzers/TimeOverviewAnalyzer\";\nimport EventOverrides from \"./analyzers/EventOverrides\";\n\nconst param={\n    interval: 'auto',\n    shape        : 'rect',\n    width: 1,\n    grid: 'none',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    // wave: 'rgb(255,31,46)',\n    wave: 'rgb(25,48,255)',\n    // textinterval : 10\n};\n\nclass ServiceX {\n    overViewAnalyzer;\n    audioEventListener;\n\n    start = (pos) => {\n        X('audio').start(pos);\n    };\n\n    stop = () => {\n        X('audio').stop();\n    };\n\n    toggle = () => {\n        X('audio').toggle(X('audio').param('currentTime'));\n    };\n\n    jumpTo = (pos) => {\n        X('audio').param('currentTime', pos);    // The range of value is between 0 and audio duration\n    };\n\n    register=(listener)=>{\n      this.audioEventListener=listener;\n    }\n\n    playClip=(start,end)=>{\n\n        X('audio').start(start, end);\n    };\n\n    canPlay=()=>{\n        return X('audio').isSource();\n    };\n\n    sourcePlay=(start,end)=>{\n        const buffer = X('audio').sprite({ selected : [start, end] });\n        const context = X.get();\n        const source  = context.createBufferSource();\n\n        source.buffer = buffer.selected;\n\n        source.connect(context.destination);\n\n        source.start(0);\n\n    };\n    getTimeAnalyzer=(canvas)=>{\n        const analyzer = X('audio').module('analyser').domain('time');\n        analyzer.setup(canvas).state(true);\n        analyzer.param(param);\n        return analyzer;\n\n    }\n    getFftAnalyzer=(canvas)=>{\n        const analyzer = X('audio').module('analyser').domain('fft');\n        analyzer.setup(canvas).state(true);\n        analyzer.param(param);\n        return analyzer;\n    }\n\n    createOverviewAnalyzer=()=>{\n        return {\n            init: (canvas, overView) => {\n                this.overViewAnalyzer = overView;\n                const analyzer = X('audio').module('analyser').domain(\"timeoverview\", 0);\n                X('audio').param('loop', true);\n                analyzer.setup(canvas).state(true);\n\n                analyzer.param('mode', 'sprite');\n\n                analyzer.drag((event, startTime, endTime) => {\n                    const range={start: startTime, end: endTime};\n                    this.stop();\n                    overView.setRange(range);\n                    this.audioEventListener.setTimeOverviewRange(range);\n\n                });\n                new EventOverrides(analyzer, canvas);\n\n                analyzer.param(param);\n            },\n            stop: () => {\n                this.stop()\n            },\n            play: (start, end) => {\n                this.playClip(start, end);\n            }\n        };\n    };\n\n\n    createAnalyzer = (width=50,height=50) => {\n\n           const analyzer=this.createOverviewAnalyzer()\n            const key=`timeOverview-${new Date().getTime()}`;\n            return <TimeOverviewAnalyzer analyzer={analyzer} key={key} w={width} h={height} />\n\n    };\n\n    doLoad = (fileName, cb) => {\n\n        console.log(\"X('audio').start\");\n\n        X('audio').resize(16384);\n\n        X('audio').setup({\n            decode: (arrayBuffer) => {\n                // The 1st argument is the instance of `ArrayBuffer`\n                console.log('decode');\n                console.dir(arrayBuffer);\n            },\n            ready: (audioBuffer) => {\n                // The 1st argument is the instance of `AudioBuffer`\n                console.log('ready');\n                this.jumpTo(0);\n                cb.ready(audioBuffer.duration);\n            },\n            start: (source, currentTime) => {\n                // The 1st argument is the instance of `AudioBufferSourceNode`\n                // The 2nd argument is current time (position) in the played audio\n                console.log('start');\n                console.dir(source);\n                console.dir(currentTime);\n            },\n            stop: (source, currentTime) => {\n                // The 1st argument is the instance of `AudioBufferSourceNode`\n                // The 2nd argument is current time (position) in the played audio\n                console.log('stop');\n                console.dir(source);\n                console.dir(currentTime);\n            },\n            update: (source, currentTime) => {\n                const index = Math.floor(currentTime * source.buffer.sampleRate)\n                const n100msec = 0.100 * source.buffer.sampleRate;\n\n                if ((index % n100msec) !== 0) {\n                    return;\n                }\n\n                // console.log('update');\n                // console.dir(source);\n                // console.dir(currentTime);\n                cb.progress(currentTime);\n                if (this.ClipCb){\n                    this.ClipCb(currentTime)\n                }\n\n                this.audioEventListener.progress(currentTime);\n\n            },\n            ended: (source, currentTime) => {\n                // The 1st argument is the instance of `AudioBufferSourceNode`\n                // The 2nd argument is current time (position) in audio\n                console.log('ended');\n                console.dir(source);\n                console.dir(currentTime);\n\n                cb.ended();\n            },\n            error: error => {\n                // The 1st argument is either `Error` or `null`\n                if (error instanceof Error) {\n                    window.alert(error.message);\n                } else {\n                    window.alert('Error : decodeAudioData');\n                }\n            }\n        });\n\n        // this.initAnalyser(canvas);\n        if (cb.createAnalyzers) {\n            cb.createAnalyzers()\n        }\n\n        X.ajax({\n            url: fileName,\n            timeout: 60000,\n            success: (event, arrayBuffer) => {\n                // The 1st argument is `XMLHttpRequestProgressEvent`\n                // The 2nd argument is `ArrayBuffer`[ArrayBuffer -> AudioBuffer]\n                X('audio').ready.call(X('audio'), arrayBuffer);\n\n            },\n            error: (event, textStatus) => {\n                // The 1st argument is `XMLHttpRequestProgressEvent`\n                // The 2nd argument is either 'error' or 'timeout'\n\n                console.log('error');\n                console.dir(event);\n                console.dir(textStatus);\n            },\n            progress: (event) => {\n                // The 1st argument is `XMLHttpRequestProgressEvent`\n\n                console.log('progress');\n                console.dir(event);\n            }\n        });\n    }\n\n}\n\nexport default ServiceX;","\nclass AudioEventListener {\n\n    registeredClips = [];\n    audio;\n    currentClip;\n    timeOverviewRange;\n    techniqueGroups=[];\n\n    constructor(audio) {\n        this.audio = audio;\n        audio.register(this);\n    }\n\n    registerClip = (clip) => {\n        this.registeredClips.push(clip);\n        console.log(`register: ${clip}`);\n        console.log(`size: ${this.registeredClips.length}`);\n    };\n\n    unregisterClip = (clip) => {\n        this.registeredClips =\n            this.registeredClips.filter((item) => item !== clip);\n        if (this.registeredClips.length<=0){\n            this.currentClip=undefined;\n        }\n        console.log(`unRegister: ${clip}`);\n        console.log(`size: ${this.registeredClips.length}`);\n\n    };\n\n    progress=(pos)=>{\n        if(this.currentClip){\n            this.currentClip.progress(pos)\n        }\n    }\n    stopAll=()=>{\n        this.registeredClips.forEach((clip)=>{\n            clip.stop()\n        });\n    }\n    requestFocus=(id)=>{\n        this.stopAll()\n        this.currentClip=this.registeredClips.find((itm)=>itm.getId()===id);\n\n    }\n\n    getTimeAnalyzer=(canvas)=>{\n        return this.audio.getTimeAnalyzer(canvas)\n    }\n\n    getFftAnalyzer=(canvas)=>{\n        return this.audio.getFftAnalyzer(canvas)\n    };\n\n    setTimeOverviewRange=(range)=>{\n        this.stopAll();\n        this.timeOverviewRange=range\n    };\n\n    registerTechnique=(techniqueName,tech)=> {\n        this.techniqueGroups[techniqueName] = tech;\n    };\n\n    addClipToTechnique=(techniqueName)=>{\n        const tech=this.techniqueGroups[techniqueName];\n        if (tech){\n            tech.addClip();\n        }\n    }\n\n}\n\nexport default AudioEventListener;","import React, {createContext, Component} from 'react';\nimport ServiceX from \"../xsound/ServiceX\"\nimport AudioEventListener from \"./AudioEventListener\";\n\nexport const SoundXContext = createContext();\n\nexport class AudioProvider extends Component {\n    render() {\n        const audio = new ServiceX();\n        const audioListener = new AudioEventListener(audio)\n        return (\n            <SoundXContext.Provider value={{\n                audio,\n                audioListener,\n            }}>\n                {this.props.children}\n            </SoundXContext.Provider>\n        );\n    }\n}\n\n","import React, { useRef }from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport { NavLink } from \"react-router-dom\";\nimport \"./style.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nconst newUser = () => {\n    return(\n        <div id=\"form\">\n            <Form md={{ span: 6, offset: 3 }}>\n                <Row>\n                    <Col md={{ span: 4, offset: 4 }}>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Full Name</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"First Name\" />\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={{ span: 4, offset: 4 }}>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Control type=\"email\" placeholder=\"Last Name\" />\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={{ span: 4, offset: 4 }}>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Authentication</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"login@email.com\" />\n                            <Form.Text className=\"text-muted\">\n                                We'll never share your email with anyone else.\n                            </Form.Text>\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={{ span: 4, offset: 4 }}>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Control type=\"email\" placeholder=\"Password\" />\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={{ span: 4, offset: 4 }}>\n                        <Button> Create New User</Button>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={{ span: 4, offset: 4 }}>\n                        <NavLink to=\"/existinguser\" activeClassName=\"active\"> Already a User? </NavLink>\n                    </Col>\n                </Row>\n            </Form>  \n        </div>\n    )\n}\n\nexport default newUser;\n\n\n\n\n\n\n\n\n\n\n\n","import React, { UseRef } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { Form, Row, Col, Button} from 'react-bootstrap';\nimport { outputUserContext } from '../Authentication/Components/userContext';\nimport \"./style.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst existingUser = () => {\n        return (\n            <div id=\"form\">\n                <Form md={{ span: 6, offset: 3 }}>\n                    <Row>\n                        <Col md={{ span: 4, offset: 4 }}>\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <Form.Label>User Name</Form.Label>\n                                <Form.Control type=\"email\" placeholder=\"login@email.com\" />\n                                {/* <Form.Control ref={username} type=\"email\" placeholder=\"login@email.com\" /> */}\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={{ span: 4, offset: 4 }}>\n                            <Form.Group controlId=\"formPassword\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"email\" placeholder=\"Password\" />\n                                {/* <Form.Control ref={password} type=\"email\" placeholder=\"Password\" /> */}\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={{ span: 4, offset: 4 }}>\n                            <Button> Login </Button>\n                            {/* <Button onClick={login}> Login </Button> */}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={{ span: 4, offset: 4 }}>\n                            <NavLink to=\"/\" activeClassName=\"active\"> Oops, wrong page! </NavLink>\n                        </Col>\n                    </Row>\n                </Form>  \n            </div>\n        );\n    \n}\n\n\n// const existingUser = (props) => {\n//     console.log(props);\n//     const username = UseRef();\n//     const password = UseRef();\n//     const [user, dispatch] = outputUserContext();\n\n//     const login = () => {\n//         let loginObj = {\n//             email: username.current.value,\n//             password: password.current.value,\n//         }\n\n//         fetch('/auth/register_login', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify(loginObj),\n//         }).then((response) => response.json())\n//             .then((data) => {\n//                 dispatch({\n//                     type: 'loggedInUser',\n//                     payload: data,\n//                 })\n//                 props.history.push('/home')\n//             }).catch((error) => {\n//                 console.error('Error:', error)\n//             })\n//     }\n//         return (\n//             <div id=\"form\">\n//                 <Form md={{ span: 6, offset: 3 }}>\n//                     <Row>\n//                         <Col md={{ span: 4, offset: 4 }}>\n//                             <Form.Group controlId=\"formBasicEmail\">\n//                                 <Form.Label>User Name</Form.Label>\n//                                 <Form.Control ref={username} type=\"email\" placeholder=\"login@email.com\" />\n//                             </Form.Group>\n//                         </Col>\n//                     </Row>\n//                     <Row>\n//                         <Col md={{ span: 4, offset: 4 }}>\n//                             <Form.Group controlId=\"formPassword\">\n//                                 <Form.Label>Password</Form.Label>\n//                                 <Form.Control ref={password} type=\"email\" placeholder=\"Password\" />\n//                             </Form.Group>\n//                         </Col>\n//                     </Row>\n//                     <Row>\n//                         <Col md={{ span: 4, offset: 4 }}>\n//                             <Button onClick={login}> Login </Button>\n//                         </Col>\n//                     </Row>\n//                     <Row>\n//                         <Col md={{ span: 4, offset: 4 }}>\n//                             <NavLink to=\"/\" activeClassName=\"active\"> Oops, wrong page! </NavLink>\n//                         </Col>\n//                     </Row>\n//                 </Form>  \n//             </div>\n//         );\n    \n// }\n\nexport default existingUser;","import React, { Component } from 'react';\nimport { Link, Route, Switch} from \"react-router-dom\";\nimport newUser from './newUser';\nimport existingUser from './existingUser';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport \"./style.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Authentication extends Component {\n    render () {\n        return (\n            <div className=\"backgroundPic\">\n                <div id=\"title\"></div> \n                <div className=\"auth-body\">\n                    <div className=\"pForm\">\n                        <div id=\"form-background\"></div>\n                        <Route render={({location}) => (\n                            <TransitionGroup>\n                                <CSSTransition \n                                    key={location.key}\n                                    timeout={450}\n                                    classNames=\"fade\"\n                                >\n                                    <Switch location={location}>\n                                        <Route exact path=\"/\" component={newUser} />\n                                        <Route path=\"/existingUser\" component={existingUser} />\n                                    </Switch>\n                                </CSSTransition>\n                            </TransitionGroup>\n                        )} />\n                    </div>\n                    <Link to=\"/home\"> Home </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\n<Link to=\"/newSongs\">New Songs</Link>\n\nexport default Authentication;\n\n\n\n\n","import { FaPauseCircle, FaPlayCircle } from 'react-icons/fa'\n\nexport {\n    GoHome as HomeIcon \n} from \"react-icons/go\"\n\nexport {\n    FaChartBar as AnalysisIcon\n} from \"react-icons/fa\"\n\nexport {\n    ImHeadphones as ListenIcon\n} from \"react-icons/im\"\n\nexport {\n    BiMessageCheck as ReviewIcon\n} from \"react-icons/bi\"\n\nexport {\n    MdPlaylistAdd as AddClipIcon\n} from \"react-icons/md\"\n\nexport {\n    RiPlayList2Fill as PlayListsIcon,\n} from \"react-icons/ri\"\n\nexport {\n    TiDeleteOutline as DeleteClipIcon\n} from 'react-icons/ti'\n\nexport const AnimatePlayIcon = () => (\n    <FaPlayCircle className=\"react-jinke-music-player-play-icon\" />\n)\nexport const AnimatePauseIcon = () => (\n    <FaPauseCircle className=\"react-jinke-music-player-pause-icon\" />\n)","import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { AnalysisIcon, HomeIcon, ListenIcon, ReviewIcon } from \"../../../util/appIcons\";\nimport Dropdown from \"./dropdown\";\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\n\n\nconst Top = () => {\n    return <div style={{ height: 120, }}>\n        {/* <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a class=\"navbar-brand\" >Navbar</a>\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul class=\"navbar-nav\">\n                    <li class=\"nav-item active\">\n                        <Link to=\"/\" class=\"nav-link\" > <HomeIcon/>Home</Link>\n                    </li>\n                    <li class=\"nav-item\">\n                        <Link to=\"analyze\" class=\"nav-link\" ><AnalysisIcon/>Analyze  </Link>\n                    </li>\n                    <li class=\"nav-item\">\n                        <Link to=\"Listen\" class=\"nav-link\" > <ListenIcon/> Listen </Link>\n                        \n                    </li>\n                    <li class=\"nav-item\">\n                        <Link to=\"review\" class=\"nav-link\" ><ReviewIcon/>Review </Link>\n                       \n                    </li>\n                    <li class=\"nav-item\">\n                        <Link to=\"detailed\" class=\"nav-link\" >Detailed Page</Link>\n                       \n                    </li>\n                    \n                </ul>\n                <form class=\"form-inline my-2 my-lg-0\">\n       <Dropdown/> \n      {/* <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button> */}\n        {/* </form>\n            </div>\n        </nav> */}\n\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Link to=\"/\" className=\"nav-link\" ><HomeIcon />Home</Link>\n                    <Link to=\"/analyze\" className=\"nav-link\" ><AnalysisIcon />Analyze </Link>\n                    <Link to=\"/listen\" className=\"nav-link\" > <ListenIcon /> Listen</Link>\n                    <Link to=\"review\" class=\"nav-link\" ><ReviewIcon/>Review </Link>\n\n                </Nav>\n                <Nav>\n                    \n                        <NavDropdown alignRight={true} title=\"Songs\" id=\"collasible-nav-dropdown\">\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.2\">Another action branston jr</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                        </NavDropdown>\n                   \n                    <Nav.Link eventKey={2} href=\"#memes\">   </Nav.Link>\n                </Nav>\n                \n            </Navbar.Collapse>\n        </Navbar>\n\n    </div>\n\n}\n\nexport default Top;","import React, {Component} from 'react';\nimport _ from 'lodash'\nimport {AnimatePauseIcon, AnimatePlayIcon, DeleteClipIcon} from \"../../util/appIcons\";\nimport {SoundXContext} from \"../AudioProvider\";\n\nexport class AudioClip extends Component {\n    static contextType = SoundXContext;\n\n    state = {\n        playing: false,\n        posValue: 0,\n        id:this.props.id,\n        start:this.props.start,\n        end:this.props.end,\n        currentPos:this.props.start,\n    };\n    componentDidMount() {\n        this.context.audioListener.registerClip(this);\n    }\n    componentWillUnmount() {\n        this.stop();\n        this.context.audioListener.unregisterClip(this);\n    }\n\n    deleteClip=()=>{\n        this.props.onDelete(this.props.id);\n    }\n\n    progress=(pos)=>{\n        const {audio}=this.context;\n        const {start,end,currentPos}=this.state;\n        const posValue=pos - Math.floor(start);\n        this.setState({posValue,\n            currentPos:pos\n        });\n        if (pos >= end) {\n            this.setState({posValue:0});\n            audio.jumpTo(start)\n        }\n    };\n\n    stop=()=>{\n        if (this.state.playing) {\n            this.setState({playing: false});\n            const {audio} = this.context;\n            audio.stop();\n        }\n    }\n\n    toggle = () => {\n        const {audio}=this.context;\n        const {id,playing,currentPos}=this.state;\n        if (!playing){\n            this.context.audioListener.requestFocus(id);\n            audio.jumpTo(currentPos)\n        }\n        audio.toggle();\n        this.setState({playing:!playing});\n\n    };\n\n    getId=()=>{\n        return this.state.id;\n    };\n\n    render() {\n\n        const {playing,posValue,start,end}=this.state;\n        const playMap = _.range(Math.floor(start), Math.floor(end) + 1);\n        const max = playMap.length;\n        const w = 100;//max * 11;\n\n\n        const changed = (e) => {\n            // props.changed(e.target.value);\n            console.log(e.target.value);\n        }\n\n\n\n        return (\n            <div className={\"audio-clip\"} style={{width:w}}>\n                <span><span onClick={this.toggle}>{playing ? <AnimatePauseIcon /> : <AnimatePlayIcon />}</span>\n                <input onChange={changed}\n                       type={\"range\"}\n                       min={0}\n                       max={max}\n                       value={posValue}\n                       style={{width: \"60%\"}}\n                />\n                <DeleteClipIcon onClick={this.deleteClip}/>\n                </span>\n            </div>\n        );\n    }\n    toString=()=>{\n\n        return this.getId();\n    };\n\n\n};","import React, {Component} from 'react';\nimport {AudioClip} from \"./AudioClip\";\nimport {SoundXContext} from \"../AudioProvider\";\nimport {containerBGs} from \"../Playerx\";\n\n\nexport class ClipList extends Component {\n    static contextType = SoundXContext;\n\n    state = {\n        clipList: []\n    };\n\n    componentDidMount() {\n        const {technique} = this.props;\n        this.context.audioListener.registerTechnique(technique, this);\n    }\n\n    addClip = () => {\n        if (this.state.clipList.length<this.props.max) {\n            const range = this.context.audioListener.timeOverviewRange;\n            if(range) {\n                const secs = Math.floor(range.end - range.start);\n                if ( secs > 10) {\n                    const id = new Date().getTime();\n                    const clipList = [...this.state.clipList, {id, ...range}];\n                    this.setState({clipList});\n                } else {\n                    alert(`Selected clips of ${secs} is less than 10secs`)\n\n                }\n            }\n\n        }else{\n            alert(`Cannot exceeded max clips of ${this.props.max}`)\n        }\n    };\n\n\n    deleteClip = (id) => {\n        const clipList = this.state.clipList.filter((itm) => itm.id !== id);\n        this.setState({clipList});\n    };\n\n    render() {\n        const {clipList} = this.state;\n        const {technique} = this.props;\n\n        return <>\n            {clipList && clipList.length > 0 &&\n\n            <div className={\"clip-container\"} style={{background: containerBGs[technique]}}>\n                <ul id={\"navlist\"}>\n                    {clipList.map((clip, idx) => {\n                        return <li key={clip.id}>\n                            <AudioClip\n                                id={clip.id}\n                                start={clip.start}\n                                end={clip.end}\n                                onDelete={() => this.deleteClip(clip.id)}\n                            />\n                        </li>\n                    })}\n                </ul>\n            </div>\n            }\n        </>\n    }\n\n}","import React, {Component,useEffect, createRef} from 'react';\nimport {SoundXContext} from \"../AudioProvider\";\n\nexport class TimeAnalyze extends Component{\n    static contextType = SoundXContext;\n    canvasRef=createRef();\n\n    componentDidMount() {\n        const canvas = this.canvasRef.current;\n        this.context.audioListener.getTimeAnalyzer(canvas);\n    }\n\n    render() {\n        const {w, h} = this.props;\n\n        return (\n            <div>\n                <svg ref={this.canvasRef} width={w} height={h}></svg>\n            </div>\n        );\n    }\n}","import React, {Component,useEffect, createRef} from 'react';\nimport {SoundXContext} from \"../AudioProvider\";\n\nexport class FFTAnalyze extends Component{\n    static contextType = SoundXContext;\n    canvasRef=createRef();\n\n    componentDidMount() {\n        const canvas = this.canvasRef.current;\n        this.context.audioListener.getFftAnalyzer(canvas);\n    }\n\n    render() {\n        const {w, h} = this.props;\n\n        return (\n            <div>\n                <svg ref={this.canvasRef} width={w} height={h}></svg>\n            </div>\n        );\n    }\n}","import React, { useContext, useEffect, useRef, useState } from 'react';\n\nimport { AddClipIcon, PlayListsIcon } from \"../util/appIcons\";\nimport { SoundXContext } from \"./AudioProvider\";\nimport { ClipList } from \"./clips/ClipList\";\nimport { TimeAnalyze } from \"./analyzers/TimeAnalyze\";\nimport { FFTAnalyze } from \"./analyzers/FFTAnalyze\";\n\n\nconst apiUrl = \"\";\n\nconst TECHNIQUE_METAPHOR = 'Metaphor';\nconst TECHNIQUE_PUNCH_LINE = 'Punch_line';\nconst TECHNIQUE_IMAGERY = 'Imagery';\n\nexport const containerBGs = {\n    [TECHNIQUE_METAPHOR]: \"#2e8b57\",\n    [TECHNIQUE_PUNCH_LINE]: \"rgba(255,105,104,0.96)\",\n    [TECHNIQUE_IMAGERY]: \"#237aff\",\n}\nconst PlayerX = () => {\n    const canvasRef = useRef();\n\n    let { audio, audioListener } = useContext(SoundXContext);\n\n\n    const [playing, setPlaying] = useState(false);\n    const [loaded, setLoaded] = useState(false);\n    const [pos, setPos] = useState(0);\n    const [max, setMax] = useState(0);\n    const [playlist, setPlaylist] = useState([]);\n    // const [metaPhorList, setMetaPhorList] = useState([]);\n\n    const [timeOverViewAnalyzer, setTimeOverViewAnalyzer] = useState(<div />);\n\n    useEffect(() => {\n        const loadPlaylist = async () => {\n\n            try {\n                const resp = await fetch(`${apiUrl}/audio/playlist`);\n                if (resp.ok) {\n                    const playLst = await resp.json();\n                    setPlaylist(playLst);\n                    // load(0);\n                }\n            } catch (e) {\n                alert(`problem loading songs: \"${e.message}\"`)\n            }\n        };\n        loadPlaylist();\n\n    }, []);\n\n    const load = (track) => {\n        // audio = new ServiceX(`${apiUrl}/audio/load/${track}`);\n        const fileName = `${apiUrl}/audio/load/${track}`;\n        audio.doLoad(fileName, {\n            ready: (d) => {\n                setPos(0);\n                setLoaded(true);\n                setMax(d)\n            },\n            ended: () => {\n                setPlaying(false);\n                setPos(0)\n            },\n            progress: (p) => {\n                setPos(p)\n            },\n            createAnalyzers: () => {\n                setTimeOverViewAnalyzer(audio.createAnalyzer(795, 50));\n            }\n        }, canvasRef.current)/**/\n\n    };\n\n    const toggle = () => {\n        audio.toggle();\n        setPlaying(!playing);\n\n    };\n\n    const changed = (v) => {\n        setPos(v);\n        audio.jumpTo(v);\n    };\n\n    const titleSelected = (e) => {\n        if (audio) audio.stop();\n        setPlaying(false);\n        setLoaded(false);\n        load(e.target.value);\n    };\n\n    const addClip = (technique) => {\n        audioListener.addClipToTechnique(technique)\n    };\n    const AddClipButton = (props) => {\n        const { key, technique } = props;\n        return <li key={key}\n            onClick={() => addClip(technique)}\n            style={{ background: containerBGs[technique], cursor: \"pointer\" }}>\n            <span><AddClipIcon /> Add to {technique}</span>\n        </li>\n    }\n    return (\n\n        <div>\n            <div style={{ textAlign: \"left\", padding: 10 }}>\n                <PlayListsIcon />\n                <select onChange={titleSelected}>\n                    {\n                        playlist.map((itm, idx) => {\n                            return <option key={idx} value={idx}>\n                                {itm.title} {\"  ----  \"} [{itm.artists}]\n                            </option>\n                        })\n                    }\n\n                </select>\n            </div>\n\n            {/* {loaded && */}\n                {/* <div> */}\n\n                    {/* <hr /> */}\n\n\n                    {/* <FFTAnalyze key={1} w={80} h={50} />\n                    <TimeAnalyze key={2} w={80} h={50} /> */}\n\n                    {/* <br /> */}\n\n\n                    {/*<div disabled={!loaded} onClick={toggle}>{playing ? <AnimatePauseIcon/> : <AnimatePlayIcon/>}</div>*/}\n                    {/*    <ProgressX max={max} pos={pos} changed={changed}/>*/}\n                    {/*    <br/>*/}\n\n                {/* </div> */}\n            {/* } */}\n            {loaded && <FFTAnalyze key={1} w={80} h={50} /> }\n\n            {timeOverViewAnalyzer}\n            {loaded && <TimeAnalyze key={2} w={80} h={50} /> }\n            {loaded &&\n                <div>\n                    <ul className={\"technique\"}>\n                        <AddClipButton key={1} technique={TECHNIQUE_METAPHOR} />\n                        <AddClipButton key={2} technique={TECHNIQUE_PUNCH_LINE} />\n                        <AddClipButton key={3} technique={TECHNIQUE_IMAGERY} />\n                    </ul>\n                    <ClipList technique={TECHNIQUE_METAPHOR} max={4} />\n                    <ClipList technique={TECHNIQUE_PUNCH_LINE} max={2} />\n                    <ClipList technique={TECHNIQUE_IMAGERY} max={3} />\n                </div>\n            }\n\n        </div>\n    );\n\n};\n\nexport default PlayerX;","import { Link } from \"react-router-dom\";\nimport PlayerX from \"../xsound/Playerx\";\n\nconst Analyze = () => {\n    return <div>\n        Analyze\n<PlayerX/>\n        \n    </div>;\n}\n \nexport default Analyze;","import { Link } from \"react-router-dom\";\n\nconst DetailedPage = () => {\n    return <div>\n        DetailedPage\n        \n    </div>;\n}\n \nexport default DetailedPage;","import { Link } from \"react-router-dom\";\nimport PlayerX from \"../xsound/Playerx\";\n\nconst LandingPage = () => {\n    return <div>\n        Landing Page\n    </div>;\n}\n \nexport default LandingPage;","import { Link } from \"react-router-dom\";\n\nconst Listen = () => {\n    return <div>\n        Listen\n       \n    </div>;\n}\n \nexport default Listen;","import { Link } from \"react-router-dom\";\n\nconst Review = () => {\n    return <div>\n        Review\n        \n    </div>;\n}\n \nexport default Review;","import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Analyze from \"./analyze\";\nimport Authentication from \"./Authentication/authentication\";\nimport DetailedPage from \"./detailedPage\";\nimport LandingPage from \"./landingPage\";\nimport Listen from \"./Listen\";\nimport Review from \"./review\";\n\n\nconst Root = () => {\n    return  <div>\n        <Route exact path=\"/landingpage\" component={LandingPage} />\n        <Route exact path=\"/analyze\" component={Analyze} />\n        <Route exact path=\"/listen\" component={Listen} />\n        <Route exact path=\"/review\" component={Review} />\n        <Route exact path=\"/detailed\" component={DetailedPage} />\n        \n    </div>\n\n}\n \nexport default Root;\n\n{/* <Route exact path=\"/\" component={Authentication} /> */}","import React from 'react';\nimport './index.css';\nimport { AudioProvider } from './xsound/AudioProvider';\nimport Authentication from \"./pages/Authentication/authentication\";\nimport Home from \"./pages/home\";\nimport { outputUserContext } from './pages/Authentication/Components/userContext';\nimport PrivateRoute from './pages/Authentication/Components/protectedRoute';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n\n// import App from \"./App\";\nimport Top from \"./pages/component/top/top\";\nimport Root from \"./pages/rootPage\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Layout = () => {\n    return (<div className=\"App\">\n        <Router>\n            <Top />\n            <div style={{ height: \"calc(100vh - 120px)\", }}>\n               \n            <Root />\n            </div>\n        </Router>\n    </div>);\n}\n\n\n// const Layout = () => {\n//     return (\n//         <Router>\n//             {/* <outputUserContext> */}\n//                 <Switch>\n//                     <PrivateRoute path='/home'>\n//                         <AudioProvider>\n//                             <Home />\n//                         </AudioProvider>\n//                     </PrivateRoute>\n//                     <BrowserRouter>\n//                         <Route exact path=\"/\" component={(props) => <Authentication {...props} />}/>\n//                         <Route>\n//                             <h1>404 NOT FOUND</h1>\n//                         </Route>\n//                     </BrowserRouter>\n//                 </Switch>\n//             {/* </outputUserContext> */}\n//         </Router>\n//     );\n// }\n\nexport default Layout;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport { AudioProvider } from './xsound/AudioProvider';\n\nimport Authentication from \"./pages/Authentication/authentication\";\nimport Layout from './layout';\nimport { outputUserContext } from './pages/Authentication/Components/userContext';\nimport PrivateRoute from './pages/Authentication/Components/protectedRoute';\n\n// import reportWebVitals from './reportWebVitals';\n// import App from '../src/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Route path=\"/\" component={Authentication}/>\n    </BrowserRouter>\n    <AudioProvider>\n    {/* <App /> */}\n    <Layout/>\n    </AudioProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//   <React.StrictMode>(<Layout /></React.StrictMode>, document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <outputUserContext>\n//       <Switch>\n//         <PrivateRoute path='/home'>\n//           <AudioProvider>\n//             {/* <App /> */}\n//             <Layout/>\n//           </AudioProvider>\n//         </PrivateRoute>\n//         <BrowserRouter>\n//           <Route exact path=\"/\" component={(props) => <Authentication {...props} />}/>\n//           <Route>\n//             <h1>404 NOT FOUND</h1>\n//           </Route>\n//         </BrowserRouter>\n//       </Switch>\n//     </outputUserContext>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );"],"sourceRoot":""}