[{"/Users/Gshow/Desktop/Project3/client/src/index.js":"1","/Users/Gshow/Desktop/Project3/client/src/layout.js":"2","/Users/Gshow/Desktop/Project3/client/src/xsound/AudioProvider.jsx":"3","/Users/Gshow/Desktop/Project3/client/src/component/top/top.js":"4","/Users/Gshow/Desktop/Project3/client/src/pages/rootPage.js":"5","/Users/Gshow/Desktop/Project3/client/src/xsound/AudioEventListener.js":"6","/Users/Gshow/Desktop/Project3/client/src/component/top/dropdown.js":"7","/Users/Gshow/Desktop/Project3/client/src/util/appIcons.js":"8","/Users/Gshow/Desktop/Project3/client/src/pages/review.js":"9","/Users/Gshow/Desktop/Project3/client/src/pages/analyze.js":"10","/Users/Gshow/Desktop/Project3/client/src/pages/landingPage.js":"11","/Users/Gshow/Desktop/Project3/client/src/pages/Listen.js":"12","/Users/Gshow/Desktop/Project3/client/src/pages/Authentication/authentication.js":"13","/Users/Gshow/Desktop/Project3/client/src/xsound/analyzers/TimeOverviewAnalyzer.jsx":"14","/Users/Gshow/Desktop/Project3/client/src/xsound/analyzers/TimeAnalyze.jsx":"15","/Users/Gshow/Desktop/Project3/client/src/xsound/analyzers/FFTAnalyze.jsx":"16","/Users/Gshow/Desktop/Project3/client/src/xsound/clips/AudioClip.jsx":"17","/Users/Gshow/Desktop/Project3/client/src/pages/detailedPage.js":"18","/Users/Gshow/Desktop/Project3/client/src/xsound/core/AudioService.js":"19","/Users/Gshow/Desktop/Project3/client/src/xsound/SongLoader.js":"20","/Users/Gshow/Desktop/Project3/client/src/xsound/PlayProgress.js":"21","/Users/Gshow/Desktop/Project3/client/src/xsound/TechniqueManager.js":"22","/Users/Gshow/Desktop/Project3/client/src/xsound/clips/ClipContainer.jsx":"23"},{"size":665,"mtime":1607401835742,"results":"24","hashOfConfig":"25"},{"size":510,"mtime":1607237126033,"results":"26","hashOfConfig":"25"},{"size":597,"mtime":1607399270062,"results":"27","hashOfConfig":"25"},{"size":2402,"mtime":1607409528861,"results":"28","hashOfConfig":"25"},{"size":764,"mtime":1607238151964,"results":"29","hashOfConfig":"25"},{"size":2369,"mtime":1607399270057,"results":"30","hashOfConfig":"25"},{"size":395,"mtime":1607220493451,"results":"31","hashOfConfig":"25"},{"size":748,"mtime":1607220493458,"results":"32","hashOfConfig":"25"},{"size":144,"mtime":1607220493456,"results":"33","hashOfConfig":"25"},{"size":390,"mtime":1607410948373,"results":"34","hashOfConfig":"25"},{"size":151,"mtime":1607402680486,"results":"35","hashOfConfig":"25"},{"size":224,"mtime":1607407516008,"results":"36","hashOfConfig":"25"},{"size":2163,"mtime":1607238151963,"results":"37","hashOfConfig":"25"},{"size":2569,"mtime":1607404806823,"results":"38","hashOfConfig":"25"},{"size":881,"mtime":1607399270074,"results":"39","hashOfConfig":"25"},{"size":832,"mtime":1607399270073,"results":"40","hashOfConfig":"25"},{"size":2600,"mtime":1607407974330,"results":"41","hashOfConfig":"25"},{"size":162,"mtime":1607238152387,"results":"42","hashOfConfig":"25"},{"size":6183,"mtime":1607399270081,"results":"43","hashOfConfig":"25"},{"size":1444,"mtime":1607403785391,"results":"44","hashOfConfig":"25"},{"size":2322,"mtime":1607413782925,"results":"45","hashOfConfig":"25"},{"size":1885,"mtime":1607407890900,"results":"46","hashOfConfig":"25"},{"size":2099,"mtime":1607399594130,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1xd07u0",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"50"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/Gshow/Desktop/Project3/client/src/index.js",[],["109","110"],"/Users/Gshow/Desktop/Project3/client/src/layout.js",["111"],"import { BrowserRouter as Router, Route } from \"react-router-dom\";\n// import App from \"./App\";\nimport Top from \"./component/top/top\";\nimport Root from \"./pages/rootPage\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nconst Layout = () => {\n    return (<div className=\"App\">\n        <Router>\n            <Top />\n            <div style={{ height: \"calc(100vh - 120px)\", }}>\n                {/* <App /> */}\n                <Root />\n            </div>\n            </Router>\n    </div>);\n}\n\nexport default Layout;","/Users/Gshow/Desktop/Project3/client/src/xsound/AudioProvider.jsx",[],"/Users/Gshow/Desktop/Project3/client/src/component/top/top.js",["112","113","114","115"],"import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { AnalysisIcon, HomeIcon, ListenIcon, ReviewIcon } from \"../../util/appIcons\";\nimport Dropdown from \"./dropdown\";\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\nimport {SongLoader} from \"../../xsound/SongLoader\";\nimport {PlayProgress} from \"../../xsound/PlayProgress\"\nimport { FFTAnalyze } from \"../../xsound/analyzers/FFTAnalyze\";\nimport { TimeAnalyze } from \"../../xsound/analyzers/TimeAnalyze\";\n\n// const apiUrl = \"http://localhost:3030\";\nconst apiUrl = \"\";\n\n\n\nconst Top = () => {\n    return <div style={{ height: 120, }}>\n       \n\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Link to=\"/\" className=\"nav-link\" ><HomeIcon />Home</Link>\n                    <Link to=\"/analyze\" className=\"nav-link\" ><AnalysisIcon />Analyze </Link>\n                    <Link to=\"/listen\" className=\"nav-link\" > <ListenIcon /> Listen</Link>\n                    <Link to=\"review\" className=\"nav-link\" ><ReviewIcon/>Review </Link>\n\n                </Nav>\n                <Nav>\n                    \n                        {/* <NavDropdown alignRight={true} title=\"Songs\" id=\"collasible-nav-dropdown\">\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.2\">Another action branston jr</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                        </NavDropdown> */}\n            <SongLoader apiUrl={apiUrl} />\n                   \n                    <Nav.Link eventKey={2} href=\"#memes\">   </Nav.Link>\n                </Nav>\n                \n            </Navbar.Collapse>\n        </Navbar>\n        <ul className=\"timefft\">\n        <li><FFTAnalyze key={1} w={80} h={50}/></li>\n         <li><PlayProgress/></li>\n          <li><TimeAnalyze key={2} w={150} h={50}/></li>\n         </ul>\n         </div>\n\n}\n\nexport default Top;","/Users/Gshow/Desktop/Project3/client/src/pages/rootPage.js",["116"],"import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Analyze from \"./analyze\";\nimport Authentication from \"./Authentication/authentication\";\nimport DetailedPage from \"./detailedPage\";\nimport LandingPage from \"./landingPage\";\nimport Listen from \"./Listen\";\nimport Review from \"./review\";\n\n\nconst Root = () => {\n    return  <div>\n        <Route exact path=\"/\" component={Authentication} />\n        <Route exact path=\"/landingpage\" component={LandingPage} />\n        <Route exact path=\"/analyze\" component={Analyze} />\n        <Route exact path=\"/listen\" component={Listen} />\n        <Route exact path=\"/review\" component={Review} />\n        <Route exact path=\"/detailed\" component={DetailedPage} />\n        \n    </div>\n\n}\n \nexport default Root;","/Users/Gshow/Desktop/Project3/client/src/xsound/AudioEventListener.js",[],"/Users/Gshow/Desktop/Project3/client/src/component/top/dropdown.js",[],"/Users/Gshow/Desktop/Project3/client/src/util/appIcons.js",[],"/Users/Gshow/Desktop/Project3/client/src/pages/review.js",["117"],"import { Link } from \"react-router-dom\";\n\nconst Review = () => {\n    return <div>\n        Review\n        \n    </div>;\n}\n \nexport default Review;","/Users/Gshow/Desktop/Project3/client/src/pages/analyze.js",["118"],"import { Link } from \"react-router-dom\";\nimport { TimeOverviewAnalyzer } from \"../xsound/analyzers/TimeOverviewAnalyzer\";\nimport { TechniqueManager } from \"../xsound/TechniqueManager\";\n\nconst Analyze = () => {\n    return <div>\n        \n        <TimeOverviewAnalyzer apiUrl={\"\"} key={\"analyzer\"} w={800} h={100} />\n        <TechniqueManager/>\n        \n    </div>;\n}\n \nexport default Analyze;","/Users/Gshow/Desktop/Project3/client/src/pages/landingPage.js",["119"],"import { Link } from \"react-router-dom\";\n\nconst LandingPage = () => {\n    return <div>\n        Landing Page\n    </div>;\n}\n \nexport default LandingPage;","/Users/Gshow/Desktop/Project3/client/src/pages/Listen.js",["120","121"],"import { Link } from \"react-router-dom\";\nimport { TimeOverviewAnalyzer } from \"../xsound/analyzers/TimeOverviewAnalyzer\";\nconst Listen = () => {\n    return <div>\n        Listen\n        \n    </div>;\n}\n \nexport default Listen;","/Users/Gshow/Desktop/Project3/client/src/pages/Authentication/authentication.js",["122","123","124"],"import \"./style.css\"\nimport { Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, Container, Row, Col } from 'react-bootstrap';\n\nconst Authentication = () => {\n    return <div className=\"backgroundPic\">\n            <div id=\"title\"> </div> \n            <div className=\"auth-body\">\n                <div className=\"pForm\">\n                    <div id=\"form-background\"></div>\n                    <div id=\"form\">\n                        <Form>\n                            <Row>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Label>Full Name</Form.Label>\n                                    <Form.Control type=\"email\" placeholder=\"First Name\" />\n                                </Form.Group>\n                            </Row>\n                            <Row>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Control type=\"email\" placeholder=\"Last Name\" />\n                                </Form.Group>\n                            </Row>\n                            <Row>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Label>Authentication</Form.Label>\n                                    <Form.Control type=\"email\" placeholder=\"login@email.com\" />\n                                    <Form.Text className=\"text-muted\">\n                                        We'll never share your email with anyone else.\n                                    </Form.Text>\n                                </Form.Group>\n                            </Row>\n                            <Row>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Control type=\"email\" placeholder=\"Password\" />\n                                </Form.Group>\n                            </Row>\n                        </Form>  \n                    </div>\n                </div>\n            </div>\n\n       \n\n        {/* <Link to=\"/landingpage\">New Songs</Link> */}\n    </div>\n}\nexport default Authentication;","/Users/Gshow/Desktop/Project3/client/src/xsound/analyzers/TimeOverviewAnalyzer.jsx",[],"/Users/Gshow/Desktop/Project3/client/src/xsound/analyzers/TimeAnalyze.jsx",[],"/Users/Gshow/Desktop/Project3/client/src/xsound/analyzers/FFTAnalyze.jsx",[],"/Users/Gshow/Desktop/Project3/client/src/xsound/clips/AudioClip.jsx",["125"],"import React, {Component} from 'react';\nimport _ from 'lodash'\nimport {AnimatePauseIcon, AnimatePlayIcon, DeleteClipIcon} from \"../../util/appIcons\";\nimport {SoundXContext} from \"../AudioProvider\";\n\nexport class AudioClip extends Component {\n    static contextType = SoundXContext;\n\n    state = {\n        playing: false,\n        posValue: 0,\n        id:this.props.id,\n        start:this.props.start,\n        end:this.props.end,\n        currentPos:this.props.start,\n    };\n    componentDidMount() {\n        this.context.audioListener.registerClip(this);\n    }\n    componentWillUnmount() {\n        this.stop();\n        this.context.audioListener.unregisterClip(this);\n    }\n\n    deleteClip=()=>{\n        this.props.onDelete(this.props.id);\n    }\n\n    progress=(pos)=>{\n        const {audio}=this.context;\n        const {start,end,currentPos}=this.state;\n        const posValue=pos - Math.floor(start);\n        this.setState({posValue,\n            currentPos:pos\n        });\n        if (pos >= end) {\n            this.setState({posValue:0});\n            audio.jumpTo(start)\n        }\n    };\n\n    stop=()=>{\n        if (this.state.playing) {\n            this.setState({playing: false});\n            const {audio} = this.context;\n            audio.stop();\n        }\n    }\n\n    toggle = () => {\n        const {audio}=this.context;\n        const {id,playing,currentPos}=this.state;\n        if (!playing){\n            this.context.audioListener.requestFocus(id);\n            audio.jumpTo(currentPos)\n        }\n        audio.toggle();\n        this.setState({playing:!playing});\n\n    };\n\n    getId=()=>{\n        return this.state.id;\n    };\n\n    render() {\n\n        const {playing,posValue,start,end}=this.state;\n        const playMap = _.range(Math.floor(start), Math.floor(end) + 1);\n        const max = playMap.length;\n        const w = 100;//max * 11;\n\n\n        const changed = (e) => {\n            // props.changed(e.target.value);\n            console.log(e.target.value);\n        }\n\n\n\n        return (\n            <div className={\"audio-clip\"} style={{width:w}}>\n                <span><span onClick={this.toggle}>{playing ? <AnimatePauseIcon /> : <AnimatePlayIcon />}</span>\n                <input onChange={changed}\n                       type={\"range\"}\n                       min={0}\n                       max={max}\n                       value={posValue}\n                       style={{width: \"60%\"}}\n                />\n                <DeleteClipIcon onClick={this.deleteClip}/>\n                </span>\n            </div>\n        );\n    }\n    toString=()=>{\n\n        return this.getId();\n    };\n\n\n};","/Users/Gshow/Desktop/Project3/client/src/pages/detailedPage.js",["126"],"import { Link } from \"react-router-dom\";\n\nconst DetailedPage = () => {\n    return <div>\n        DetailedPage\n        \n    </div>;\n}\n \nexport default DetailedPage;","/Users/Gshow/Desktop/Project3/client/src/xsound/core/AudioService.js",["127"],"import {X} from \"xsound\";\n\nconst param={\n    interval: 'auto',\n    shape        : 'rect',\n    width: 1,\n    grid: 'none',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    // wave: 'rgb(255,31,46)',\n    wave: 'rgb(25,48,255)',\n    // textinterval : 10\n};\n\nclass AudioService {\n\n    audioEventListener;\n\n    start = (pos) => {\n        X('audio').start(pos);\n    };\n\n    stop = () => {\n        X('audio').stop();\n    };\n\n    toggle = () => {\n        X('audio').toggle(X('audio').param('currentTime'));\n    };\n\n    jumpTo = (pos) => {\n        X('audio').param('currentTime', pos);    // The range of value is between 0 and audio duration\n    };\n\n    register=(listener)=>{\n      this.audioEventListener=listener;\n    }\n\n    playRange=(start,end)=>{\n\n        X('audio').start(start, end);\n    };\n\n    canPlay=()=>{\n        return X('audio').isSource();\n    };\n\n    sourcePlay=(start,end)=>{\n        const buffer = X('audio').sprite({ selected : [start, end] });\n        const context = X.get();\n        const source  = context.createBufferSource();\n\n        source.buffer = buffer.selected;\n\n        source.connect(context.destination);\n\n        source.start(0);\n\n    };\n    createTimeAnalyzer=(canvas)=>{\n        const analyzer = X('audio').module('analyser').domain('time');\n        analyzer.setup(canvas).state(true);\n        analyzer.param(param);\n        return analyzer;\n\n    }\n    createFftAnalyzer=(canvas)=>{\n        const analyzer = X('audio').module('analyser').domain('fft');\n        analyzer.setup(canvas).state(true);\n        analyzer.param(param);\n        return analyzer;\n    }\n\n    createOverviewAnalyzer=()=>{\n        return {\n            init: (canvas) => {\n\n                const analyzer = X('audio').module('analyser').domain(\"timeoverview\", 0);\n                // X('audio').param('loop', true);\n                analyzer.setup(canvas).state(true);\n\n                analyzer.param('mode', 'sprite');\n\n                analyzer.drag((event, startTime, endTime) => {\n                    const range={start: startTime, end: endTime};\n                    this.stop();\n                    // overView.setRange(range);\n                    this.audioEventListener.setTimeOverviewRange(range);\n\n                });\n                // new EventOverrides(analyzer, canvas);\n\n                analyzer.param(param);\n            }\n\n        };\n    };\n\n\n    createAnalyzer = () => {\n\n           const analyzer=this.createOverviewAnalyzer();\n            const key=`timeOverview-${new Date().getTime()}`;\n            return analyzer;\n\n    };\n\n    doLoad = (fileName, cb) => {\n\n        console.log(\"X('audio').start\");\n\n        X('audio').resize(16384);\n\n        X('audio').setup({\n            decode: (arrayBuffer) => {\n                // The 1st argument is the instance of `ArrayBuffer`\n                console.log('decode');\n                console.dir(arrayBuffer);\n            },\n            ready: (audioBuffer) => {\n                // The 1st argument is the instance of `AudioBuffer`\n                console.log('ready');\n                this.jumpTo(0);\n                this.audioEventListener.loaded(audioBuffer.duration)\n            },\n            start: (source, currentTime) => {\n                // The 1st argument is the instance of `AudioBufferSourceNode`\n                // The 2nd argument is current time (position) in the played audio\n                console.log('start');\n                console.dir(source);\n                console.dir(currentTime);\n            },\n            stop: (source, currentTime) => {\n                // The 1st argument is the instance of `AudioBufferSourceNode`\n                // The 2nd argument is current time (position) in the played audio\n                console.log('stop');\n                console.dir(source);\n                console.dir(currentTime);\n            },\n            update: (source, currentTime) => {\n                const index = Math.floor(currentTime * source.buffer.sampleRate)\n                const n100msec = 0.100 * source.buffer.sampleRate;\n\n                if ((index % n100msec) !== 0) {\n                    return;\n                }\n\n                // console.log('update');\n                // console.dir(source);\n                // console.dir(currentTime);\n                // cb.progress(currentTime);\n                if (this.ClipCb){\n                    this.ClipCb(currentTime)\n                }\n\n                this.audioEventListener.progress(currentTime);\n\n            },\n            ended: (source, currentTime) => {\n                // The 1st argument is the instance of `AudioBufferSourceNode`\n                // The 2nd argument is current time (position) in audio\n                console.log('ended');\n                console.dir(source);\n                console.dir(currentTime);\n\n                // cb.ended();\n            },\n            error: error => {\n                // The 1st argument is either `Error` or `null`\n                if (error instanceof Error) {\n                    window.alert(error.message);\n                } else {\n                    window.alert('Error : decodeAudioData');\n                }\n            }\n        });\n\n        // this.initAnalyser(canvas);\n        if (cb.createAnalyzers) {\n            cb.createAnalyzers();\n        }\n\n        X.ajax({\n            url: fileName,\n            timeout: 60000,\n            success: (event, arrayBuffer) => {\n                // The 1st argument is `XMLHttpRequestProgressEvent`\n                // The 2nd argument is `ArrayBuffer`[ArrayBuffer -> AudioBuffer]\n\n\n                    X('audio').ready.call(X('audio'), arrayBuffer);\n\n\n            },\n            error: (event, textStatus) => {\n                // The 1st argument is `XMLHttpRequestProgressEvent`\n                // The 2nd argument is either 'error' or 'timeout'\n\n                console.log('error');\n                console.dir(event);\n                console.dir(textStatus);\n            },\n            progress: (event) => {\n                // The 1st argument is `XMLHttpRequestProgressEvent`\n\n                console.log('progress');\n                console.dir(event);\n            }\n        });\n    }\n\n}\n\nexport default AudioService;","/Users/Gshow/Desktop/Project3/client/src/xsound/SongLoader.js",["128","129"],"\nimport React, {useContext, useEffect, useState} from 'react';\nimport {PlayListsIcon} from \"../util/appIcons\";\nimport {SoundXContext} from \"./AudioProvider\";\n\nexport function SongLoader(props) {\n    const {audio,audioListener} = useContext(SoundXContext);\n\n    const [playlist, setPlaylist] = useState([]);\n    const {apiUrl,setTimeOverViewAnalyzer}=props;\n\n    useEffect(() => {\n        const loadPlaylist = async () => {\n\n            try {\n                const resp = await fetch(`${apiUrl}/audio/playlist`);\n                if (resp.ok) {\n                    const playLst = await resp.json();\n                    setPlaylist(playLst);\n                }\n            } catch (e) {\n                alert(`problem loading songs: \"${e.message}\"`)\n            }\n        };\n        loadPlaylist();\n\n    }, []);\n\n\n\n\n    const songSelected = (e) => {\n        if (audio){\n            audio.stop()\n        };\n\n        audioListener.timeOverviewAnalyzer.loadSong(e.target.value);\n    };\n\n\n    return (\n        <div style={{textAlign: \"left\", padding: 10}}>\n            <PlayListsIcon/>\n            <select onChange={songSelected}>\n                {\n                    playlist.map((itm, idx) => {\n                        return <option key={idx} value={idx}>\n                            {itm.title} {\"  ----  \"} [{itm.artists}]\n                        </option>\n                    })\n                }\n\n            </select>\n        </div>\n    );\n};","/Users/Gshow/Desktop/Project3/client/src/xsound/PlayProgress.js",["130"],"import React, { Component, useState } from 'react';\nimport { AnimatePauseIcon, AnimatePlayIcon } from \"../util/appIcons\";\nimport { SoundXContext } from \"./AudioProvider\";\nimport { round } from \"./analyzers/TimeOverviewAnalyzer\";\n\nconst nbSpace =(n)=>{\n    let result = \"\";\n for (let index = 0; index < n; index++) {\n     result = result + \n     <span>&nbsp;</span>\n }\n    return  <span>&nbsp;</span> ;  \n} \nexport class PlayProgress extends Component {\n    static contextType = SoundXContext;\n\n    state = {\n        pos: 0,\n        playing: false,\n        max: 0,\n        show: false\n    };\n\n    // const [pos, setPos] = useState(0);\n    componentDidMount() {\n        this.context.audioListener.progressX = this;\n    }\n\n    componentWillUnmount() {\n        this.context.audioListener.progressX = null;\n    }\n\n    toggle = () => {\n        this.context.audio.toggle();\n        const playing = !this.state.playing;\n        this.setState({ playing });\n\n    };\n    stop = (pos) => {\n        this.context.audio.stop()\n    };\n\n    progress = (pos) => {\n        this.setState({ pos });\n    };\n\n    changed = (e) => {\n        const pos = e.target.value;\n        this.setState({ pos });\n        this.context.audio.jumpTo(pos);\n    };\n\n    loaded = (duration) => {\n        this.setState({ max: duration });\n        this.setState({ show: true })\n    }\n\n    render() {\n        const { max, pos, show, playing } = this.state;\n        const posMin = round(pos / 60, 2);\n        const endMin = round(max / 60, 2);\n        return (\n            <div>\n                {show &&\n                    <div>\n\n                        <span onClick={this.toggle}>\n                            {playing ? <AnimatePauseIcon /> : <AnimatePlayIcon />}\n                            {nbSpace(2)}\n                            <span style={{ fontSize: 12 }}>{posMin}</span>\n                            {nbSpace(2)}\n                            <input onChange={this.changed}\n                                type={\"range\"}\n                                min={0}\n                                max={max}\n                                value={pos}\n                                style={{ width: 700 }}\n                            /> {endMin}\n                        </span>\n                    </div>\n                }\n            </div>\n        );\n    }\n\n}\n\n","/Users/Gshow/Desktop/Project3/client/src/xsound/TechniqueManager.js",["131"],"\nimport React, {useContext,useState,useEffect} from 'react';\nimport {ClipContainer} from \"./clips/ClipContainer\";\nimport {AddClipIcon} from \"../util/appIcons\";\nimport {SoundXContext} from \"./AudioProvider\";\n\nconst TECHNIQUE_METAPHOR = 'Metaphor';\nconst TECHNIQUE_PUNCH_LINE = 'Punch_line';\nconst TECHNIQUE_IMAGERY = 'Imagery';\n\nexport const containerBGs = {\n    [TECHNIQUE_METAPHOR]: \"#2e8b57\",\n    [TECHNIQUE_PUNCH_LINE]: \"rgba(255,105,104,0.96)\",\n    [TECHNIQUE_IMAGERY]: \"#237aff\",\n}\n\nexport const TechniqueManager=(props) =>{\n    const [show, setShow] = useState(false);\n    const { audioListener} = useContext(SoundXContext);\n\n    useEffect(() => {\n        audioListener.techniqueManager={loaded};\n        return () => {\n            audioListener.techniqueManager=null;\n        };\n    }, []);\n\n    const loaded=()=>{\n        setShow(true)\n    }\n    const addClip = (technique) => {\n        audioListener.addClipToTechnique(technique)\n    };\n    const AddClipButton = (props) => {\n        const {technique}=props;\n        return <li\n            onClick={() => addClip(technique)}\n            style={{background: containerBGs[technique],cursor:\"pointer\"}}>\n            <span><AddClipIcon/> Add to {technique}</span>\n        </li>\n    }\n    return (\n        <div>\n            { show &&\n                <div>\n                <ul className={\"technique\"}>\n                    <AddClipButton key={1} technique={TECHNIQUE_METAPHOR}/>\n                    <AddClipButton key={2} technique={TECHNIQUE_PUNCH_LINE}/>\n                    <AddClipButton key={3} technique={TECHNIQUE_IMAGERY}/>\n                </ul>\n                < ClipContainer technique={TECHNIQUE_METAPHOR} max={4}/>\n                <ClipContainer technique={TECHNIQUE_PUNCH_LINE} max={2}/>\n                <ClipContainer technique={TECHNIQUE_IMAGERY} max={3}/>\n                </div>\n            }\n        </div>\n    );\n};","/Users/Gshow/Desktop/Project3/client/src/xsound/clips/ClipContainer.jsx",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":35,"nodeType":"138","messageId":"139","endLine":1,"endColumn":40},{"ruleId":"136","severity":1,"message":"140","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":33},{"ruleId":"136","severity":1,"message":"137","line":1,"column":35,"nodeType":"138","messageId":"139","endLine":1,"endColumn":40},{"ruleId":"136","severity":1,"message":"141","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":16},{"ruleId":"136","severity":1,"message":"142","line":4,"column":23,"nodeType":"138","messageId":"139","endLine":4,"endColumn":34},{"ruleId":"136","severity":1,"message":"140","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":33},{"ruleId":"136","severity":1,"message":"143","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":14},{"ruleId":"136","severity":1,"message":"143","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":14},{"ruleId":"136","severity":1,"message":"143","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":14},{"ruleId":"136","severity":1,"message":"143","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":14},{"ruleId":"136","severity":1,"message":"144","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":30},{"ruleId":"136","severity":1,"message":"143","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":14},{"ruleId":"136","severity":1,"message":"145","line":4,"column":16,"nodeType":"138","messageId":"139","endLine":4,"endColumn":25},{"ruleId":"136","severity":1,"message":"146","line":4,"column":32,"nodeType":"138","messageId":"139","endLine":4,"endColumn":35},{"ruleId":"136","severity":1,"message":"147","line":31,"column":26,"nodeType":"138","messageId":"139","endLine":31,"endColumn":36},{"ruleId":"136","severity":1,"message":"143","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":14},{"ruleId":"136","severity":1,"message":"148","line":105,"column":19,"nodeType":"138","messageId":"139","endLine":105,"endColumn":22},{"ruleId":"136","severity":1,"message":"149","line":10,"column":19,"nodeType":"138","messageId":"139","endLine":10,"endColumn":42},{"ruleId":"150","severity":1,"message":"151","line":27,"column":8,"nodeType":"152","endLine":27,"endColumn":10,"suggestions":"153"},{"ruleId":"136","severity":1,"message":"154","line":1,"column":28,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"150","severity":1,"message":"155","line":26,"column":8,"nodeType":"152","endLine":26,"endColumn":10,"suggestions":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Dropdown' is defined but never used.","'NavDropdown' is defined but never used.","'Link' is defined but never used.","'TimeOverviewAnalyzer' is defined but never used.","'Container' is defined but never used.","'Col' is defined but never used.","'currentPos' is assigned a value but never used.","'key' is assigned a value but never used.","'setTimeOverViewAnalyzer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'apiUrl'. Either include it or remove the dependency array.","ArrayExpression",["159"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'audioListener'. Either include it or remove the dependency array.",["160"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [apiUrl]",{"range":"165","text":"166"},"Update the dependencies array to be: [audioListener]",{"range":"167","text":"168"},[804,806],"[apiUrl]",[793,795],"[audioListener]"]